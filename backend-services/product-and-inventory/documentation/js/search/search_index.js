var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.019,1,1.697]],["body/classes/AllExceptionsFilter.html",[0,0.018,1,2.274,2,1.004,3,0.424,4,0.37,5,0.319,6,2.473,7,4.089,8,4.655,9,0.37,10,2.274,11,4.655,12,4.089,13,3.554,14,4.655,15,5.002,16,0.747,17,2.996,18,1.495,19,0.038,20,0.541,21,0.424,22,1.495,23,2.996,24,1.495,25,4.655,26,1.247,27,1.106,28,2.473,29,1.495,30,2.04,31,2.996,32,2.129,33,2.996,34,0.424,35,2.274,36,5.404,37,2.996,38,3.455,39,0.826,40,4.089,41,2.996,42,2.996,43,1.51,44,2.996,45,2.996,46,2.905,47,2.996,48,2.996,49,1.495,50,1.871,51,1.666,52,2.996,53,0.025,54,0.025]],["title/interfaces/ApiResponseInterface.html",[30,1.523,55,1.697]],["body/interfaces/ApiResponseInterface.html",[3,0.527,4,0.46,5,0.396,9,0.46,19,0.038,21,0.771,30,2.353,34,0.668,38,3.4,39,1.046,43,2.12,46,2.643,49,2.944,50,3.4,53,0.029,54,0.029,55,2.068,56,2.643,57,2.643,58,2.643,59,1.299,60,5.177,61,2.323]],["title/modules/AppModule.html",[62,1.373,63,1.906]],["body/modules/AppModule.html",[0,0.02,3,0.453,4,0.395,5,0.341,19,0.039,26,1.334,27,1.181,34,0.453,53,0.026,54,0.026,62,2.166,63,3.569,64,1.439,65,1.439,66,1.997,67,1.997,68,1.595,69,2.669,70,1.997,71,2.639,72,2.639,73,2.748,74,3.063,75,2.669,76,1.997,77,1.997,78,3.197,79,3.036,80,2.271,81,1.302,82,3.972,83,1.439,84,3.197,85,3.197,86,3.197,87,3.197,88,3.197,89,3.197,90,3.197,91,3.197,92,3.197,93,3.197,94,3.197,95,3.197,96,3.197,97,3.197,98,1.595]],["title/classes/Category.html",[0,0.019,99,0.841]],["body/classes/Category.html",[0,0.021,2,1.121,3,0.474,4,0.414,5,0.356,9,0.414,16,1.098,19,0.038,20,0.889,21,0.741,26,1.098,34,0.697,35,1.861,39,0.89,43,1.818,53,0.027,54,0.027,59,1.214,81,1.363,83,1.982,99,1.537,100,2.09,101,4.063,102,2.751,103,2.762,104,4.063,105,3.346,106,3.129,107,2.762,108,3.635,109,3.635,110,3.635,111,3.346,112,4.063,113,2.751,114,2.762,115,3.129,116,2.09,117,2.762,118,2.762,119,2.762,120,2.09,121,2.762]],["title/controllers/CategoryController.html",[122,1.697,123,1.906]],["body/controllers/CategoryController.html",[0,0.013,1,1.192,3,0.303,4,0.265,5,0.228,9,0.265,10,1.788,16,1.283,18,2.293,19,0.038,20,0.83,21,0.651,22,2.293,24,2.569,26,1.203,27,0.791,29,1.069,34,0.303,39,1.064,51,2.863,53,0.02,54,0.02,98,1.069,99,1.478,102,3.216,122,1.788,123,2.008,124,1.769,125,1.604,126,2.285,127,3.54,128,3.54,129,2.654,130,3.54,131,2.654,132,1.788,133,1.769,134,2.408,135,2.654,136,2.143,137,1.522,138,2.654,139,2.143,140,1.981,141,4.427,142,3.047,143,2.143,144,3.215,145,2.143,146,1.769,147,2.654,148,2.143,149,2.008,150,2.143,151,1.769,152,2.654,153,2.143,154,1.769,155,2.684,156,2.654,157,2.143,158,1.769,159,1.769,160,1.769,161,1.737,162,1.769,163,1.338,164,2.285,165,1.338,166,1.769,167,1.769,168,1.769,169,1.338,170,1.769,171,2.143,172,1.769,173,2.143,174,2.143,175,2.143,176,2.143,177,2.143,178,2.143,179,2.143,180,2.143,181,2.143,182,2.143]],["title/modules/CategoryModule.html",[62,1.373,73,1.523]],["body/modules/CategoryModule.html",[0,0.022,3,0.495,4,0.432,5,0.373,19,0.038,20,0.632,26,1.374,27,1.292,34,0.495,53,0.028,54,0.028,62,2.264,64,1.575,65,1.575,66,2.185,67,2.185,68,1.746,69,3.142,70,2.185,73,2.818,75,2.832,76,2.185,77,2.185,79,2.486,80,2.486,81,1.425,98,2.262,99,0.964,113,2.185,120,2.832,123,3.142,161,2.542,162,2.888,183,2.888,184,2.888,185,3.499,186,3.499,187,2.888,188,2.888,189,2.888]],["title/classes/CategoryResponseDto.html",[0,0.019,190,1.523]],["body/classes/CategoryResponseDto.html",[0,0.024,2,1.305,3,0.551,4,0.481,5,0.415,9,0.481,16,1.318,19,0.037,20,0.955,21,0.749,34,0.551,39,1.173,43,1.792,53,0.03,54,0.03,59,1.337,140,1.952,190,2.421,191,3.932,192,2.432,193,4.364,194,3.214,195,3.214,196,3.214]],["title/injectables/CategoryService.html",[161,1.373,197,1.697]],["body/injectables/CategoryService.html",[0,0.007,3,0.16,4,0.139,5,0.12,9,0.139,10,1.068,13,0.802,16,1.054,18,1.8,19,0.039,20,0.836,21,0.511,22,1.8,24,2.023,26,1.124,27,0.417,29,0.563,30,0.563,32,0.802,34,0.16,35,2.972,38,2.735,39,0.854,43,1.988,49,2.185,50,2.735,51,2.434,53,0.012,54,0.012,61,2.735,81,0.46,83,0.864,99,1.274,101,3.346,125,1.251,126,1.364,127,2.442,128,2.442,129,2.069,130,2.442,131,2.069,132,1.394,133,0.931,134,1.8,137,1.364,140,1.561,142,2.356,146,0.931,147,1.585,149,0.705,151,0.931,154,0.931,155,2.006,161,0.864,163,0.705,164,1.364,165,0.705,169,0.705,187,0.931,189,0.931,190,0.563,197,1.068,198,0.802,199,0.931,200,4.444,201,1.585,202,1.128,203,2.442,204,1.128,205,1.92,206,1.128,207,4.107,208,1.128,209,1.128,210,1.128,211,1.128,212,1.128,213,1.128,214,1.128,215,0.931,216,0.931,217,0.802,218,1.128,219,1.92,220,1.364,221,0.705,222,1.128,223,0.931,224,4.107,225,3.85,226,2.356,227,2.506,228,3.346,229,3.346,230,3.111,231,2.978,232,1.92,233,1.92,234,1.92,235,2.442,236,1.92,237,2.958,238,1.92,239,1.92,240,1.128,241,3.978,242,1.92,243,1.128,244,1.128,245,1.128,246,2.506,247,1.92,248,1.128,249,1.92,250,1.128,251,1.128,252,1.128,253,2.442,254,1.128,255,1.128,256,1.128,257,1.128,258,1.585,259,1.128,260,1.128,261,1.585,262,1.128,263,1.128,264,1.128,265,1.128,266,1.128,267,0.931,268,1.128,269,1.128,270,1.128,271,1.128,272,1.128,273,1.128,274,1.128,275,1.128,276,1.92,277,1.128,278,1.128,279,1.128,280,1.92,281,1.128,282,1.128,283,1.128,284,1.128,285,0.931,286,1.128]],["title/interfaces/CategoryTreeResponseDto.html",[55,1.697,221,1.906]],["body/interfaces/CategoryTreeResponseDto.html",[3,0.551,4,0.481,5,0.415,9,0.481,19,0.037,20,1,21,0.749,26,0.97,34,0.551,39,1.173,53,0.03,54,0.03,55,2.165,56,2.766,59,1.337,99,1.073,140,2.044,149,2.432,190,2.761,191,2.766,192,2.432,220,2.766,221,3.031,285,4.568]],["title/classes/CreateCategoryDto.html",[0,0.019,134,1.523]],["body/classes/CreateCategoryDto.html",[0,0.025,2,1.38,3,0.583,4,0.509,5,0.439,9,0.509,16,1.252,19,0.036,20,0.979,21,0.711,34,0.583,39,1.14,53,0.031,54,0.031,59,1.384,134,2.506,193,4.474,287,4.474,288,2.925,289,4.117,290,4.117]],["title/classes/CreateProductDto.html",[0,0.019,291,1.523]],["body/classes/CreateProductDto.html",[0,0.021,2,1.168,3,0.494,4,0.431,5,0.371,9,0.431,16,1.406,19,0.037,20,0.907,21,0.799,34,0.494,39,1.176,43,1.671,53,0.028,54,0.028,59,1.246,291,2.257,292,4.741,293,2.477,294,3.136,295,3.568,296,3.568,297,2.506,298,3.568,299,3.486,300,3.486,301,3.486,302,2.955,303,3.486,304,3.486,305,2.878]],["title/classes/Product.html",[0,0.019,306,1.243]],["body/classes/Product.html",[0,0.017,2,0.911,3,0.385,4,0.336,5,0.29,9,0.336,16,1.307,19,0.038,20,0.799,21,0.779,26,1.102,34,0.626,35,1.512,39,1.059,43,1.412,53,0.024,54,0.024,59,1.054,81,1.108,83,1.721,99,1.393,102,3.275,103,3.961,104,4.727,106,2.717,107,2.245,108,2.245,109,3.156,112,4.539,113,2.388,114,2.245,115,2.717,117,2.245,118,4.328,119,2.245,294,2.762,295,3.142,296,3.142,297,2.207,298,3.142,302,2.668,306,1.557,307,1.698,308,2.719,309,2.719,310,2.719,311,2.719,312,2.719,313,2.719,314,2.719,315,1.698,316,1.698,317,2.245]],["title/classes/ProductResponseDto.html",[0,0.019,318,1.697]],["body/classes/ProductResponseDto.html",[0,0.021,2,1.129,3,0.477,4,0.416,5,0.359,9,0.416,16,1.42,19,0.037,20,0.892,21,0.807,34,0.477,39,1.192,43,1.634,53,0.027,54,0.027,59,1.219,140,1.824,192,2.104,194,2.781,195,2.781,196,2.781,294,3.085,295,3.509,296,3.509,297,2.464,298,3.509,302,2.916,318,2.46,319,4.772,320,3.369,321,3.369,322,3.369,323,3.369]],["title/controllers/ProductsController.html",[122,1.697,324,1.906]],["body/controllers/ProductsController.html",[0,0.012,1,1.083,3,0.276,4,0.241,5,0.207,9,0.241,10,1.662,16,1.277,18,2.494,19,0.038,20,0.976,21,0.708,22,2.494,24,2.557,26,1.159,27,0.719,29,0.971,34,0.276,39,1.153,51,2.85,53,0.018,54,0.018,98,0.971,99,1.125,102,3.201,122,1.662,125,1.492,132,1.662,135,2.468,138,2.468,140,1.846,141,4.319,152,2.468,156,3.371,158,1.607,159,1.607,160,1.607,163,1.216,165,1.216,166,1.607,167,1.607,168,1.607,169,1.216,170,1.607,172,1.607,226,2.124,291,2.321,297,2.494,302,2.024,306,2.036,324,1.867,325,1.607,326,3.371,327,2.468,328,2.468,329,2.99,330,2.99,331,2.468,332,1.607,333,1.947,334,2.124,335,1.947,336,1.947,337,1.947,338,1.947,339,1.947,340,1.607,341,1.947,342,1.947,343,1.947,344,1.947,345,1.947,346,1.607,347,2.586,348,1.947,349,1.607,350,1.947,351,1.816,352,1.607,353,2.124,354,1.947,355,1.947,356,1.947,357,1.947,358,1.947,359,1.947,360,1.947,361,1.947,362,1.947,363,1.947,364,1.947,365,1.947,366,1.947,367,1.947,368,1.947]],["title/modules/ProductsModule.html",[62,1.373,74,1.697]],["body/modules/ProductsModule.html",[0,0.021,3,0.474,4,0.414,5,0.356,19,0.038,20,0.605,26,1.391,27,1.236,34,0.474,53,0.027,54,0.027,62,2.216,64,1.506,65,1.506,66,2.09,67,2.09,68,1.67,69,3.075,70,2.09,73,2.784,74,3.21,75,2.751,76,2.09,77,2.09,79,3.129,80,2.378,81,1.363,98,2.198,113,2.09,188,2.762,306,1.363,316,2.751,324,3.075,351,2.784,352,2.762,369,2.762,370,2.762,371,3.346,372,3.346,373,3.346,374,2.762,375,3.346,376,2.762]],["title/injectables/ProductsService.html",[197,1.697,351,1.523]],["body/injectables/ProductsService.html",[0,0.007,3,0.16,4,0.139,5,0.12,9,0.139,10,1.067,13,0.801,16,1.124,18,2.184,19,0.039,20,0.814,21,0.62,22,2.184,24,2.184,26,1.124,27,0.416,29,0.562,30,0.562,32,0.801,34,0.16,35,2.898,38,2.531,39,1.053,43,1.924,49,2.022,50,2.531,51,2.35,53,0.012,54,0.012,61,2.733,81,0.459,83,0.863,99,0.529,106,0.801,125,1.25,126,1.363,132,1.393,137,0.801,140,1.809,161,0.507,163,0.704,165,0.704,169,0.704,197,1.067,198,0.801,200,4.499,201,1.583,203,2.44,207,4.161,215,0.93,216,0.93,220,0.801,223,0.93,224,3.976,226,1.363,228,3.176,229,3.344,230,3.109,231,2.067,235,2.44,241,3.816,261,0.93,267,3.344,291,1.799,294,0.704,297,1.475,302,1.393,306,1.836,318,0.627,326,2.44,327,2.067,328,2.067,331,2.067,332,0.93,334,1.779,340,1.583,346,0.93,347,2.005,349,0.93,351,0.957,353,1.363,374,0.93,376,0.93,377,0.93,378,1.918,379,1.918,380,1.127,381,1.127,382,1.918,383,1.127,384,1.127,385,1.918,386,1.127,387,1.127,388,1.127,389,1.127,390,1.127,391,1.127,392,1.127,393,1.918,394,1.127,395,1.918,396,1.127,397,1.127,398,1.127,399,1.127,400,1.127,401,0.801,402,1.127,403,1.127,404,1.918,405,1.918,406,1.127,407,1.918,408,1.918,409,1.918,410,1.918,411,1.918,412,1.127,413,1.127,414,1.127,415,1.918,416,1.127,417,3.314,418,2.504,419,1.127,420,1.918,421,1.918,422,1.127,423,1.918,424,1.127,425,1.918,426,1.918,427,1.918,428,1.127,429,1.127,430,2.736,431,1.127,432,2.504,433,2.956,434,1.127,435,1.127,436,1.127,437,1.127,438,2.504,439,1.127,440,1.127,441,1.127,442,1.127]],["title/classes/UpdateCategoryDto.html",[0,0.019,155,1.697]],["body/classes/UpdateCategoryDto.html",[0,0.025,2,1.347,3,0.569,4,0.497,5,0.428,9,0.497,16,1.002,19,0.037,21,0.569,26,1.233,34,0.569,39,1,53,0.03,54,0.03,59,1.364,125,2.005,134,2.005,140,1.98,155,2.752,164,2.855,288,2.855,443,4.085,444,4.085,445,4.948,446,4.018,447,3.317,448,2.855,449,2.855]],["title/classes/UpdateProductDto.html",[0,0.019,347,1.697]],["body/classes/UpdateProductDto.html",[0,0.025,2,1.347,3,0.569,4,0.497,5,0.428,9,0.497,16,1.002,19,0.037,21,0.569,26,1.233,34,0.569,39,1,53,0.03,54,0.03,59,1.364,125,2.005,140,1.98,291,2.005,293,2.855,305,3.317,347,2.752,353,2.855,444,4.085,447,3.317,448,2.855,449,2.855,450,4.085,451,4.948]],["title/coverage.html",[452,3.418]],["body/coverage.html",[0,0.034,1,1.512,5,0.29,6,2.245,19,0.038,21,0.679,30,1.357,49,1.357,53,0.024,54,0.024,55,2.126,57,2.717,58,2.717,68,1.357,99,0.749,100,2.762,116,1.698,120,1.698,122,2.126,123,1.698,124,2.245,134,1.357,149,1.698,155,1.512,161,1.224,190,1.357,191,2.717,192,2.762,197,2.126,199,2.245,217,1.932,221,1.698,230,1.932,258,5.017,287,2.245,288,2.717,291,1.357,292,2.245,293,2.717,306,1.108,307,2.762,315,1.698,316,1.698,318,1.512,319,2.245,324,1.698,325,2.245,347,1.512,351,1.357,377,2.245,401,1.932,443,2.245,450,2.245,452,2.245,453,2.245,454,2.719,455,2.719,456,4.422,457,4.422,458,5.499,459,4.422,460,2.245,461,4.422,462,2.245,463,2.245,464,2.719,465,3.824,466,3.824,467,3.824,468,3.824,469,2.719,470,2.719,471,2.719,472,2.719]],["title/dependencies.html",[65,1.649,473,2.113]],["body/dependencies.html",[0,0.03,19,0.038,27,1.449,28,3.239,29,1.958,53,0.03,54,0.03,65,1.766,81,1.598,82,3.239,83,1.766,448,2.788,449,2.788,474,5.55,475,3.924,476,3.924,477,3.924,478,3.924,479,3.924,480,3.924,481,3.924,482,3.924,483,3.924,484,3.924,485,3.924,486,3.924,487,3.924,488,3.924,489,3.924,490,3.924,491,3.924,492,3.924]],["title/miscellaneous/functions.html",[493,1.277,494,3.024]],["body/miscellaneous/functions.html",[9,0.499,18,2.475,19,0.036,20,0.896,21,0.702,22,2.475,24,2.475,53,0.031,54,0.031,68,2.68,99,1.112,116,3.099,190,2.013,217,3.525,253,3.33,306,1.643,315,3.099,318,2.243,401,3.525,430,3.33,460,3.33,462,3.33,463,3.33,493,2.013,494,3.33,495,4.034,496,4.034,497,4.034]],["title/index.html",[9,0.316,498,2.56,499,2.56]],["body/index.html",[4,0.288,5,0.248,19,0.027,20,0.42,53,0.021,54,0.021,64,1.047,65,1.047,83,1.047,99,0.641,132,1.294,142,1.653,297,1.161,306,1.393,334,1.653,453,4.517,500,1.921,501,5.548,502,4.052,503,3.419,504,4.052,505,2.327,506,5.141,507,4.052,508,2.327,509,4.466,510,2.327,511,2.327,512,2.327,513,2.327,514,2.327,515,2.327,516,2.327,517,2.327,518,2.327,519,2.327,520,2.327,521,2.327,522,2.327,523,2.327,524,2.327,525,2.327,526,2.327,527,2.327,528,2.327,529,2.327,530,2.327,531,3.419,532,3.419,533,5.141,534,2.327,535,2.327,536,2.327,537,2.327,538,2.327,539,2.327,540,3.419,541,4.974,542,2.327,543,5.141,544,2.327,545,3.419,546,2.327,547,4.052,548,2.327,549,3.419,550,2.327,551,2.327,552,2.327,553,4.974,554,2.327,555,2.327,556,3.419,557,2.327,558,3.419,559,2.327,560,2.327,561,2.327,562,2.327,563,2.327,564,3.419,565,1.921,566,2.327,567,2.327,568,3.419,569,2.327,570,2.327,571,2.327,572,4.052,573,2.327,574,2.327,575,2.327,576,2.327,577,2.327,578,2.327,579,2.327,580,2.327,581,1.653,582,2.327,583,2.327,584,2.327,585,2.327,586,2.327,587,2.327,588,3.419,589,2.327,590,2.327,591,2.327,592,2.327,593,3.927,594,2.327,595,2.327,596,2.327,597,3.419,598,3.419,599,2.327,600,2.327,601,2.327,602,2.327,603,2.327,604,2.327,605,2.327,606,2.327,607,2.822,608,2.327,609,3.419,610,2.327,611,2.327,612,2.327,613,3.345,614,2.327,615,2.327,616,3.419,617,2.327,618,2.327,619,2.327,620,2.327,621,2.327,622,2.327,623,2.327]],["title/modules.html",[64,1.864]],["body/modules.html",[19,0.032,53,0.032,54,0.032,63,2.79,64,2.01,73,2.229,74,2.484,565,4.633,593,4.633,624,5.613,625,5.613]],["title/overview.html",[626,3.418]],["body/overview.html",[2,1.261,19,0.036,53,0.029,54,0.029,56,2.673,62,1.693,63,3.595,64,1.693,65,1.693,66,2.35,67,2.35,68,1.877,69,2.35,70,2.35,71,3.105,72,3.105,73,2.872,74,3.25,75,2.966,76,2.35,77,2.35,98,1.877,161,2.342,183,3.105,184,3.105,198,2.673,351,2.597,369,3.105,370,3.105,626,3.105,627,3.762,628,5.204,629,3.762]],["title/properties.html",[59,1.01,473,2.113]],["body/properties.html",[19,0.037,53,0.033,54,0.033,59,1.259,500,3.771,607,3.771,613,3.771,630,4.569,631,4.569,632,4.569]],["title/miscellaneous/typealiases.html",[493,1.277,633,3.664]],["body/miscellaneous/typealiases.html",[9,0.535,19,0.034,21,0.613,46,3.077,49,2.584,53,0.032,54,0.032,57,3.077,58,3.68,61,2.705,100,2.705,115,3.68,116,3.235,307,2.705,315,3.235,493,2.161,634,4.331,635,3.575,636,3.575,637,4.331]],["title/miscellaneous/variables.html",[493,1.277,581,2.603]],["body/miscellaneous/variables.html",[9,0.545,19,0.036,53,0.032,54,0.032,100,2.753,110,4.32,120,3.269,121,3.638,307,2.753,316,3.269,317,3.638,493,2.199,581,3.132,635,3.638,636,3.638,638,5.233]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":631,"title":{},"body":{"properties.html":{}}}],["0.10.5",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":628,"title":{},"body":{"overview.html":{}}}],["3",{"_index":627,"title":{},"body":{"overview.html":{}}}],["4.1.14",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["8.12.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":629,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":235,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["additional",{"_index":586,"title":{},"body":{"index.html":{}}}],["alias",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["already",{"_index":232,"title":{},"body":{"injectables/CategoryService.html":{}}}],["amqp",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["any).message",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["apiresponseinterface",{"_index":30,"title":{"interfaces/ApiResponseInterface.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["application",{"_index":549,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":521,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":200,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["asynchronous",{"_index":527,"title":{},"body":{"index.html":{}}}],["author",{"_index":607,"title":{},"body":{"index.html":{},"properties.html":{}}}],["automatically",{"_index":555,"title":{},"body":{"index.html":{}}}],["await",{"_index":224,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["backend",{"_index":538,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":625,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":565,"title":{},"body":{"index.html":{},"modules.html":{}}}],["build",{"_index":547,"title":{},"body":{"index.html":{}}}],["built",{"_index":505,"title":{},"body":{"index.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(rpcexception",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":142,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["categories.foreach((category",{"_index":275,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.length",{"_index":272,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.map((category",{"_index":269,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category",{"_index":99,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["category.controller",{"_index":186,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":164,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":288,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":289,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:3",{"_index":290,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":446,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["category.name",{"_index":189,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["category.parentcategory",{"_index":250,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.parentid",{"_index":276,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.save",{"_index":252,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.service",{"_index":162,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":375,"title":{},"body":{"modules/ProductsModule.html":{}}}],["category/category.service",{"_index":399,"title":{},"body":{"injectables/ProductsService.html":{}}}],["category/schemas/category.schema",{"_index":314,"title":{},"body":{"classes/Product.html":{}}}],["category_id",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["categorycontroller",{"_index":123,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorydocument",{"_index":116,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["categorymodel",{"_index":205,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":73,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryresponse",{"_index":404,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponse.status",{"_index":407,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponsedto",{"_index":190,"title":{"classes/CategoryResponseDto.html":{}},"body":{"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["categoryschema",{"_index":120,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":161,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice.prototype.findonebyid",{"_index":405,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryservice.prototype.findonebyid(id",{"_index":440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categorytreeresponsedto",{"_index":221,"title":{"interfaces/CategoryTreeResponseDto.html":{}},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["categorywithsamename",{"_index":247,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cd",{"_index":537,"title":{},"body":{"index.html":{}}}],["channel",{"_index":596,"title":{},"body":{"index.html":{}}}],["children",{"_index":285,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{}}}],["childrenmap",{"_index":273,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(category.parentid)!.push(category",{"_index":279,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(root.id",{"_index":286,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.has(category.parentid",{"_index":277,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.set(category.parentid",{"_index":278,"title":{},"body":{"injectables/CategoryService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clone",{"_index":531,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":183,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":184,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":369,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":371,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":370,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["common/dto/api",{"_index":216,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["common/filters/exception.filter",{"_index":166,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["common/mappers/category.mapper",{"_index":218,"title":{},"body":{"injectables/CategoryService.html":{}}}],["common/mappers/product.mapper",{"_index":402,"title":{},"body":{"injectables/ProductsService.html":{}}}],["community",{"_index":602,"title":{},"body":{"index.html":{}}}],["compile",{"_index":542,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":553,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":523,"title":{},"body":{"index.html":{}}}],["configured",{"_index":552,"title":{},"body":{"index.html":{}}}],["connect",{"_index":550,"title":{},"body":{"index.html":{}}}],["connection",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection.on('connected",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnected",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnecting",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('open",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('reconnected",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["consider",{"_index":577,"title":{},"body":{"index.html":{}}}],["console.log('connected",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('disconnected",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('disconnecting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('open",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('reconnected",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["constructor(categorymodel",{"_index":202,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(private",{"_index":168,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productmodel",{"_index":380,"title":{},"body":{"injectables/ProductsService.html":{}}}],["controller",{"_index":122,"title":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controllers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["coverage",{"_index":452,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":125,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["create(@payload",{"_index":170,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["create(createcategorydto",{"_index":133,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["create(createproductdto",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createcategorydto",{"_index":134,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto.name",{"_index":227,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createcategorydto.parentid",{"_index":234,"title":{},"body":{"injectables/CategoryService.html":{}}}],["created",{"_index":243,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createproductdto",{"_index":291,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto.category_id",{"_index":406,"title":{},"body":{"injectables/ProductsService.html":{}}}],["crud",{"_index":514,"title":{},"body":{"index.html":{}}}],["data",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{}}}],["default",{"_index":110,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["delete",{"_index":126,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["delete(@payload",{"_index":174,"title":{},"body":{"controllers/CategoryController.html":{}}}],["delete(id",{"_index":137,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":575,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":572,"title":{},"body":{"index.html":{}}}],["description",{"_index":500,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":616,"title":{},"body":{"index.html":{}}}],["development",{"_index":544,"title":{},"body":{"index.html":{}}}],["discord",{"_index":595,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":524,"title":{},"body":{"index.html":{}}}],["docs",{"_index":590,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":453,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/api",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dto/requests/create",{"_index":163,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/requests/update",{"_index":165,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/responses/category",{"_index":219,"title":{},"body":{"injectables/CategoryService.html":{}}}],["dto/responses/product",{"_index":400,"title":{},"body":{"injectables/ProductsService.html":{}}}],["e.g",{"_index":525,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":579,"title":{},"body":{"index.html":{}}}],["environment",{"_index":580,"title":{},"body":{"index.html":{}}}],["error",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"miscellaneous/typealiases.html":{}}}],["errorresponse",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorresponse.message",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["escaped",{"_index":436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex",{"_index":378,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex(text",{"_index":385,"title":{},"body":{"injectables/ProductsService.html":{}}}],["etc",{"_index":621,"title":{},"body":{"index.html":{}}}],["event",{"_index":511,"title":{},"body":{"index.html":{}}}],["eventpattern",{"_index":159,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('create",{"_index":135,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('find",{"_index":141,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('remove",{"_index":138,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('update",{"_index":156,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["example",{"_index":533,"title":{},"body":{"index.html":{}}}],["exception",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.geterror",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":228,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["exist",{"_index":237,"title":{},"body":{"injectables/CategoryService.html":{}}}],["exists",{"_index":233,"title":{},"body":{"injectables/CategoryService.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["express",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":444,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["fetch",{"_index":270,"title":{},"body":{"injectables/CategoryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"index.html":{}}}],["filter((category",{"_index":281,"title":{},"body":{"injectables/CategoryService.html":{}}}],["find",{"_index":261,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["findall",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findallcategories",{"_index":127,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallparentcategories",{"_index":128,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid",{"_index":129,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid(@payload",{"_index":176,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findallsubcategoriesbyid(id",{"_index":146,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findbycategory",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbycategory(@payload",{"_index":367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(category",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(id",{"_index":389,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(updateproductdto.id",{"_index":416,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyname",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyname(@payload",{"_index":365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(name",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(partialname",{"_index":391,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findcategorytree",{"_index":130,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findone",{"_index":226,"title":{},"body":{"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone(@payload",{"_index":356,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findone(id",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findonebyid",{"_index":131,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findonebyid(@payload",{"_index":179,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findonebyid(id",{"_index":151,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findstock",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(@payload",{"_index":361,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(id",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{}}}],["following",{"_index":578,"title":{},"body":{"index.html":{}}}],["formattederror",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["found",{"_index":267,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["function",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":494,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":556,"title":{},"body":{"index.html":{}}}],["generating",{"_index":557,"title":{},"body":{"index.html":{}}}],["getstock",{"_index":379,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getstock(id",{"_index":395,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":498,"title":{"index.html":{}},"body":{}}],["git",{"_index":534,"title":{},"body":{"index.html":{}}}],["git@github.com:algos70/micro",{"_index":535,"title":{},"body":{"index.html":{}}}],["github",{"_index":620,"title":{},"body":{"index.html":{}}}],["grow",{"_index":599,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":587,"title":{},"body":{"index.html":{}}}],["handle",{"_index":513,"title":{},"body":{"index.html":{}}}],["host",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost:8080",{"_index":567,"title":{},"body":{"index.html":{}}}],["https://yourprojectwebsite.com",{"_index":610,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":115,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":140,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["injectable",{"_index":197,"title":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":215,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["injectmodel(category.name",{"_index":222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectmodel(product.name",{"_index":403,"title":{},"body":{"injectables/ProductsService.html":{}}}],["install",{"_index":540,"title":{},"body":{"index.html":{}}}],["installation",{"_index":530,"title":{},"body":{"index.html":{}}}],["instance",{"_index":551,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":526,"title":{},"body":{"index.html":{}}}],["interface",{"_index":55,"title":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":56,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"overview.html":{}}}],["inventory",{"_index":502,"title":{},"body":{"index.html":{}}}],["join",{"_index":594,"title":{},"body":{"index.html":{}}}],["later",{"_index":411,"title":{},"body":{"injectables/ProductsService.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["leverages",{"_index":518,"title":{},"body":{"index.html":{}}}],["license",{"_index":613,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":598,"title":{},"body":{"index.html":{}}}],["locally",{"_index":562,"title":{},"body":{"index.html":{}}}],["management",{"_index":503,"title":{},"body":{"index.html":{}}}],["manager",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":274,"title":{},"body":{"injectables/CategoryService.html":{}}}],["map((root",{"_index":282,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto",{"_index":217,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(category",{"_index":253,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(newcategory",{"_index":242,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto(subcategory",{"_index":263,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapproducttoresponsedto",{"_index":401,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapproducttoresponsedto(newproduct",{"_index":414,"title":{},"body":{"injectables/ProductsService.html":{}}}],["mapproducttoresponsedto(product",{"_index":430,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["match",{"_index":622,"title":{},"body":{"index.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["messaging",{"_index":528,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["microservice",{"_index":504,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":493,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":597,"title":{},"body":{"index.html":{}}}],["mode",{"_index":545,"title":{},"body":{"index.html":{}}}],["model",{"_index":203,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["modular",{"_index":520,"title":{},"body":{"index.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/category/category.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":507,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema.types.objectid",{"_index":119,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["mongoose.types.objectid",{"_index":106,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["mongoose.types.objectid(parentcategory._id",{"_index":251,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mongoosemodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":188,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost/nest",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":566,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":506,"title":{},"body":{"index.html":{}}}],["nestjs's",{"_index":519,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":448,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":230,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newcategory",{"_index":238,"title":{},"body":{"injectables/CategoryService.html":{}}}],["newproduct",{"_index":412,"title":{},"body":{"injectables/ProductsService.html":{}}}],["npm",{"_index":541,"title":{},"body":{"index.html":{}}}],["npx",{"_index":558,"title":{},"body":{"index.html":{}}}],["null",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["number",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["object",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["occurred",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["of(formattederror",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["onconnectioncreate",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["one",{"_index":152,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["open",{"_index":564,"title":{},"body":{"index.html":{}}}],["operations",{"_index":515,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":626,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":559,"title":{},"body":{"index.html":{}}}],["package",{"_index":473,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":604,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":144,"title":{},"body":{"controllers/CategoryController.html":{}}}],["parentcategories",{"_index":264,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategories.map((category",{"_index":265,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategory",{"_index":101,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{}}}],["parentcategory._id",{"_index":240,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentid",{"_index":193,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{}}}],["partialname",{"_index":393,"title":{},"body":{"injectables/ProductsService.html":{}}}],["partialtype",{"_index":447,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createcategorydto",{"_index":445,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":451,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["patterns",{"_index":512,"title":{},"body":{"index.html":{}}}],["payload",{"_index":160,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["placeholder",{"_index":618,"title":{},"body":{"index.html":{}}}],["please",{"_index":588,"title":{},"body":{"index.html":{}}}],["price",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["private",{"_index":223,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":306,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["product.category_id",{"_index":419,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.dto",{"_index":353,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:2",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:3",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:4",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:6",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:7",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.image",{"_index":428,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.name",{"_index":376,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.price",{"_index":422,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.save",{"_index":429,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.stock",{"_index":426,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.vendor_id",{"_index":424,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdocument",{"_index":315,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["production",{"_index":576,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":382,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productresponsedto",{"_index":318,"title":{"classes/ProductResponseDto.html":{}},"body":{"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["products",{"_index":334,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["products.controller",{"_index":373,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.map((product",{"_index":432,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service",{"_index":352,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productschema",{"_index":316,"title":{},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":324,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":74,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":351,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":501,"title":{},"body":{"index.html":{}}}],["project's",{"_index":571,"title":{},"body":{"index.html":{}}}],["promise",{"_index":207,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["prop",{"_index":112,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({required",{"_index":103,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({type",{"_index":107,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["properly",{"_index":582,"title":{},"body":{"index.html":{}}}],["properties",{"_index":59,"title":{"properties.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"properties.html":{}}}],["provided",{"_index":569,"title":{},"body":{"index.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["provides",{"_index":510,"title":{},"body":{"index.html":{}}}],["questions",{"_index":592,"title":{},"body":{"index.html":{}}}],["rabbitmq",{"_index":509,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":169,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["ready",{"_index":574,"title":{},"body":{"index.html":{}}}],["ref",{"_index":109,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["refer",{"_index":589,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["regexp(escaped",{"_index":439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["remove",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(@payload",{"_index":359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(id",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["repository",{"_index":532,"title":{},"body":{"index.html":{}}}],["required",{"_index":118,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["resources",{"_index":591,"title":{},"body":{"index.html":{}}}],["response",{"_index":254,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data",{"_index":256,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data.length",{"_index":257,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.dto",{"_index":220,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"injectables/ProductsService.html":{}}}],["response.dto.ts",{"_index":192,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":194,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:3",{"_index":195,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:4",{"_index":196,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:5",{"_index":322,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:6",{"_index":323,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:7",{"_index":320,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:8",{"_index":321,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.interface",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["response.interface.ts",{"_index":58,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["responsedto",{"_index":241,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["root.id",{"_index":283,"title":{},"body":{"injectables/CategoryService.html":{}}}],["root.name",{"_index":284,"title":{},"body":{"injectables/CategoryService.html":{}}}],["roots",{"_index":280,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('category",{"_index":231,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('parent",{"_index":236,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception('product",{"_index":417,"title":{},"body":{"injectables/ProductsService.html":{}}}],["rpcexceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["run",{"_index":543,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["s",{"_index":563,"title":{},"body":{"index.html":{}}}],["s]/g",{"_index":435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["same",{"_index":248,"title":{},"body":{"injectables/CategoryService.html":{}}}],["schema",{"_index":113,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{}}}],["schemafactory",{"_index":114,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["schemafactory.createforclass(category",{"_index":121,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":317,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":187,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["schemas/product.schema",{"_index":374,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["see",{"_index":615,"title":{},"body":{"index.html":{}}}],["separate",{"_index":522,"title":{},"body":{"index.html":{}}}],["serve",{"_index":561,"title":{},"body":{"index.html":{}}}],["services.git",{"_index":536,"title":{},"body":{"index.html":{}}}],["services/product",{"_index":539,"title":{},"body":{"index.html":{}}}],["set",{"_index":583,"title":{},"body":{"index.html":{}}}],["setup",{"_index":529,"title":{},"body":{"index.html":{}}}],["simply",{"_index":617,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["specifics",{"_index":623,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":601,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../category.mapper.ts",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category.schema.ts",{"_index":635,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.mapper.ts",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":636,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/dto/api",{"_index":57,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:8",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/mappers/category.mapper.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/mappers/product.mapper.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/category/category.controller.ts",{"_index":124,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/modules/category/category.controller.ts:14",{"_index":136,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:19",{"_index":157,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:24",{"_index":139,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:29",{"_index":148,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:34",{"_index":145,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:39",{"_index":153,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:44",{"_index":143,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:49",{"_index":150,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.module.ts",{"_index":185,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/modules/category/category.service.ts",{"_index":199,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/modules/category/category.service.ts:104",{"_index":208,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:117",{"_index":211,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:139",{"_index":210,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:14",{"_index":204,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:156",{"_index":213,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:173",{"_index":209,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:188",{"_index":212,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:19",{"_index":206,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:64",{"_index":214,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/dto/requests/create",{"_index":287,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/requests/update",{"_index":443,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/responses/category",{"_index":191,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["src/modules/category/schemas/category.schema.ts",{"_index":100,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/category/schemas/category.schema.ts:16",{"_index":111,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/category/schemas/category.schema.ts:9",{"_index":105,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/products/dto/requests/create",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/requests/update",{"_index":450,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/responses/product",{"_index":319,"title":{},"body":{"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:14",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:19",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:24",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:34",{"_index":345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:39",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:44",{"_index":350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:49",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:54",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":372,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":377,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:108",{"_index":394,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:121",{"_index":386,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:125",{"_index":392,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:14",{"_index":381,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:143",{"_index":390,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:161",{"_index":396,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:173",{"_index":398,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:19",{"_index":383,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:193",{"_index":384,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:41",{"_index":397,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:96",{"_index":388,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/schemas/product.schema.ts",{"_index":307,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/products/schemas/product.schema.ts:10",{"_index":310,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:12",{"_index":311,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:14",{"_index":312,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:16",{"_index":313,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:18",{"_index":309,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:24",{"_index":308,"title":{},"body":{"classes/Product.html":{}}}],["start:devproduction",{"_index":546,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":585,"title":{},"body":{"index.html":{}}}],["start:prodthe",{"_index":548,"title":{},"body":{"index.html":{}}}],["started",{"_index":499,"title":{"index.html":{}},"body":{}}],["statements",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":605,"title":{},"body":{"index.html":{}}}],["stock",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["subcategories",{"_index":147,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["subcategories.map((subcategory",{"_index":262,"title":{},"body":{"injectables/CategoryService.html":{}}}],["success",{"_index":61,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"miscellaneous/typealiases.html":{}}}],["successfully",{"_index":244,"title":{},"body":{"injectables/CategoryService.html":{}}}],["support",{"_index":593,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":624,"title":{},"body":{"modules.html":{}}}],["t",{"_index":60,"title":{},"body":{"interfaces/ApiResponseInterface.html":{}}}],["table",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":608,"title":{},"body":{"index.html":{}}}],["text",{"_index":387,"title":{},"body":{"injectables/ProductsService.html":{}}}],["text.replace",{"_index":434,"title":{},"body":{"injectables/ProductsService.html":{}}}],["thanks",{"_index":600,"title":{},"body":{"index.html":{}}}],["this.categorymodel",{"_index":225,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.create",{"_index":239,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.find().exec",{"_index":268,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyid(id).exec",{"_index":266,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyidanddelete(id).exec",{"_index":259,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findone",{"_index":260,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.create(createcategorydto",{"_index":171,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.delete(id",{"_index":175,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallcategories",{"_index":181,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallparentcategories",{"_index":178,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallsubcategoriesbyid(id",{"_index":177,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findcategorytree",{"_index":182,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findonebyid(id",{"_index":180,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.update(updatecategorydto",{"_index":173,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.escaperegex(partialname",{"_index":437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findallcategories()).data",{"_index":271,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.findallsubcategoriesbyid(id",{"_index":255,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.productmodel",{"_index":415,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.create(createproductdto",{"_index":413,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find",{"_index":441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find().exec",{"_index":431,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findbyidanddelete(id).exec",{"_index":442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findone",{"_index":433,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":354,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.delete(id",{"_index":360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":355,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbycategory(category",{"_index":368,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyname(name",{"_index":366,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":357,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getstock(id",{"_index":362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(updateproductdto",{"_index":358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updatestock(id",{"_index":364,"title":{},"body":{"controllers/ProductsController.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["timestamps",{"_index":117,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["todo",{"_index":408,"title":{},"body":{"injectables/ProductsService.html":{}}}],["touch",{"_index":606,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":516,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":149,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["tsconfig.json",{"_index":560,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":611,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":633,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["types",{"_index":449,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["undefined",{"_index":108,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["under",{"_index":614,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":632,"title":{},"body":{"properties.html":{}}}],["update",{"_index":132,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["update(@payload",{"_index":172,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["update(updatecategorydto",{"_index":154,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["update(updateproductdto",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatecategorydto",{"_index":155,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto.id",{"_index":245,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.name",{"_index":246,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.parentid",{"_index":249,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateproductdto",{"_index":347,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto.category_id",{"_index":418,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.image",{"_index":427,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.name",{"_index":420,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.price",{"_index":421,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.stock",{"_index":425,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.vendor_id",{"_index":423,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updates",{"_index":517,"title":{},"body":{"index.html":{}}}],["updatestock",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatestock(@payload",{"_index":363,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updatestock(id",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["url",{"_index":568,"title":{},"body":{"index.html":{}}}],["urls",{"_index":619,"title":{},"body":{"index.html":{}}}],["usefilters",{"_index":158,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["usefilters(allexceptionsfilter",{"_index":167,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["uses",{"_index":554,"title":{},"body":{"index.html":{}}}],["using",{"_index":584,"title":{},"body":{"index.html":{}}}],["validate",{"_index":409,"title":{},"body":{"injectables/ProductsService.html":{}}}],["validator",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":581,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vendor",{"_index":410,"title":{},"body":{"injectables/ProductsService.html":{}}}],["vendor_id",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["version",{"_index":630,"title":{},"body":{"properties.html":{}}}],["via",{"_index":508,"title":{},"body":{"index.html":{}}}],["view",{"_index":570,"title":{},"body":{"index.html":{}}}],["visit",{"_index":603,"title":{},"body":{"index.html":{}}}],["website",{"_index":609,"title":{},"body":{"index.html":{}}}],["you're",{"_index":573,"title":{},"body":{"index.html":{}}}],["your_twitter",{"_index":612,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RpcException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exception.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        RpcException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../dto/api-response.interface';\n\n@Catch(RpcException)\nexport class AllExceptionsFilter implements RpcExceptionFilter {\n  catch(exception: RpcException, host: ArgumentsHost): Observable {\n    const errorResponse = exception.getError();\n    let message: string = '';\n    if (typeof errorResponse === 'string') {\n      message = errorResponse;\n    } else if (\n      typeof errorResponse === 'object' &&\n      'message' in errorResponse &&\n      errorResponse.message !== null\n    ) {\n      message = (errorResponse as any).message;\n    } else {\n      message = 'An unknown error occurred';\n    }\n    const formattedError: ApiResponseInterface = {\n      status: 'error',\n      message: message,\n      data: null,\n    };\n    return of(formattedError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponseInterface.html":{"url":"interfaces/ApiResponseInterface.html","title":"interface - ApiResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/api-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponseInterface {\n  status: Status;\n  message: string | null;\n  data: T | null;\n}\n\nexport type Status = 'success' | 'error';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Connection } from 'mongoose';\nimport { ProductsModule } from './modules/products/products.module';\nimport { CategoryModule } from './modules/category/category.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    CategoryModule,\n    MongooseModule.forRoot('mongodb://localhost/nest', {\n      onConnectionCreate: (connection: Connection) => {\n        connection.on('connected', () => console.log('connected'));\n        connection.on('open', () => console.log('open'));\n        connection.on('disconnected', () => console.log('disconnected'));\n        connection.on('reconnected', () => console.log('reconnected'));\n        connection.on('disconnecting', () => console.log('disconnecting'));\n      },\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/schemas/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parentCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CategoryDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Category {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    default: null,\n  })\n  parentCategory: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAllCategories\n                            \n                            \n                                    \n                                findAllParentCategories\n                            \n                            \n                                    \n                                findAllSubcategoriesById\n                            \n                            \n                                    \n                                findCategoryTree\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-parent-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-subcategories-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-category-tree')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-category-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @EventPattern('create-category')\n  create(@Payload() createCategoryDto: CreateCategoryDto) {\n    return this.categoryService.create(createCategoryDto);\n  }\n\n  @EventPattern('update-category')\n  update(@Payload() updateCategoryDto: UpdateCategoryDto) {\n    return this.categoryService.update(updateCategoryDto);\n  }\n\n  @EventPattern('remove-category')\n  delete(@Payload() id: string) {\n    return this.categoryService.delete(id);\n  }\n\n  @EventPattern('find-all-subcategories-by-id')\n  findAllSubcategoriesById(@Payload() id: string) {\n    return this.categoryService.findAllSubcategoriesById(id);\n  }\n\n  @EventPattern('find-all-parent-categories')\n  findAllParentCategories() {\n    return this.categoryService.findAllParentCategories();\n  }\n\n  @EventPattern('find-one-category-by-id')\n  findOneById(@Payload() id: string) {\n    return this.categoryService.findOneById(id);\n  }\n\n  @EventPattern('find-all-categories')\n  findAllCategories() {\n    return this.categoryService.findAllCategories();\n  }\n\n  @EventPattern('find-category-tree')\n  findCategoryTree() {\n    return this.categoryService.findCategoryTree();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category, CategorySchema } from './schemas/category.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.name, schema: CategorySchema },\n    ]),\n  ],\n  controllers: [CategoryController],\n  providers: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryResponseDto.html":{"url":"classes/CategoryResponseDto.html","title":"class - CategoryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CategoryResponseDto {\n  id: string;\n  name: string;\n  parentId: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllCategories\n                            \n                            \n                                    Async\n                                findAllParentCategories\n                            \n                            \n                                    Async\n                                findAllSubcategoriesById\n                            \n                            \n                                    Async\n                                findCategoryTree\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/category/category.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category } from './schemas/category.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { mapCategoryToResponseDto } from '../../common/mappers/category.mapper';\nimport { CategoryResponseDto } from './dto/responses/category-response.dto';\nimport { CategoryTreeResponseDto } from './dto/responses/category-tree-response.dto';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectModel(Category.name) private readonly categoryModel: Model,\n  ) {}\n\n  async create(\n    createCategoryDto: CreateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ name: createCategoryDto.name })\n      .exec();\n    if (category != null) {\n      throw new RpcException('Category already exists');\n    }\n\n    if (createCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: createCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      const newCategory = await this.categoryModel.create({\n        name: createCategoryDto.name,\n        parentCategory: parentCategory._id,\n      });\n\n      const responseDto = mapCategoryToResponseDto(newCategory);\n\n      return {\n        status: 'success',\n        data: responseDto,\n        message: null,\n      };\n    }\n\n    const newCategory = await this.categoryModel.create({\n      name: createCategoryDto.name,\n      parentCategory: null,\n    });\n\n    const responseDto = mapCategoryToResponseDto(newCategory);\n\n    return {\n      status: 'success',\n      message: 'Category created successfully',\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateCategoryDto: UpdateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ _id: updateCategoryDto.id })\n      .exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    if (updateCategoryDto.name != null) {\n      const categoryWithSameName = await this.categoryModel\n        .findOne({ name: updateCategoryDto.name })\n        .exec();\n      if (categoryWithSameName != null) {\n        throw new RpcException('Category with same name already exists');\n      }\n      category.name = updateCategoryDto.name;\n    }\n\n    if (updateCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: updateCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      category.parentCategory = new mongoose.Types.ObjectId(parentCategory._id);\n    }\n\n    await category.save();\n\n    const responseDto = mapCategoryToResponseDto(category);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async delete(id: string): Promise> {\n    const response = await this.findAllSubcategoriesById(id);\n    if (response.data !== null && response.data.length !== 0) {\n      throw new RpcException('Category has subcategories');\n    }\n    await this.categoryModel.findByIdAndDelete(id).exec();\n    return {\n      status: 'success',\n      message: null,\n      data: id,\n    };\n  }\n\n  async findAllSubcategoriesById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findOne({ _id: id }).exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    const subcategories = await this.categoryModel\n      .find({ parentCategory: id })\n      .exec();\n\n    const responseDto = subcategories.map((subcategory) =>\n      mapCategoryToResponseDto(subcategory),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllParentCategories(): Promise\n  > {\n    const parentCategories = await this.categoryModel\n      .find({ parentCategory: null })\n      .exec();\n\n    const responseDto = parentCategories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findOneById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findById(id).exec();\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n\n    const responseDto = mapCategoryToResponseDto(category);\n\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllCategories(): Promise\n  > {\n    const categories = await this.categoryModel.find().exec();\n\n    const responseDto = categories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findCategoryTree(): Promise\n  > {\n    // fetch all categories\n    const categories = (await this.findAllCategories()).data;\n    if (categories == null || categories.length === 0) {\n      return {\n        status: 'success',\n        message: null,\n        data: [],\n      };\n    }\n\n    const childrenMap = new Map();\n    categories.forEach((category) => {\n      if (category.parentId) {\n        if (!childrenMap.has(category.parentId)) {\n          childrenMap.set(category.parentId, []);\n        }\n        childrenMap.get(category.parentId)!.push(category);\n      }\n    });\n\n    const roots = categories\n      .filter((category) => category.parentId === null)\n      .map((root) => ({\n        id: root.id,\n        name: root.name,\n        children: childrenMap.get(root.id) || [],\n      }));\n\n    return { status: 'success', message: null, data: roots };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryTreeResponseDto.html":{"url":"interfaces/CategoryTreeResponseDto.html","title":"interface - CategoryTreeResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryTreeResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-tree-response.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     CategoryResponseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CategoryResponseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryResponseDto } from './category-response.dto';\n\nexport interface CategoryTreeResponseDto {\n  id: string;\n  name: string;\n  children: CategoryResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n  name: string;\n  parentId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductDto {\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category_id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Category } from '../../category/schemas/category.schema';\n\nexport type ProductDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop({ required: true })\n  name: string;\n  @Prop({ required: true })\n  price: number;\n  @Prop({ required: true })\n  stock: number;\n  @Prop({ required: true })\n  vendor_id: string;\n  @Prop()\n  image: string;\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    required: true,\n  })\n  category_id: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductResponseDto.html":{"url":"classes/ProductResponseDto.html","title":"class - ProductResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/responses/product-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductResponseDto {\n  id: string;\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByCategory\n                            \n                            \n                                    \n                                findByName\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findStock\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-products')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(category: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-name')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    findStock(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @EventPattern('create-product')\n  create(@Payload() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @EventPattern('find-all-products')\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n  @EventPattern('find-one-product')\n  findOne(@Payload() id: string) {\n    return this.productsService.findOne(id);\n  }\n\n  @EventPattern('update-product')\n  update(@Payload() updateProductDto: UpdateProductDto) {\n    return this.productsService.update(updateProductDto);\n  }\n\n  @EventPattern('remove-product')\n  remove(@Payload() id: string) {\n    return this.productsService.delete(id);\n  }\n\n  @EventPattern('find-stock')\n  findStock(@Payload() id: string) {\n    return this.productsService.getStock(id);\n  }\n\n  @EventPattern('update-stock')\n  updateStock(@Payload() id: string, stock: number) {\n    return this.productsService.updateStock(id, stock);\n  }\n\n  @EventPattern('find-by-name')\n  findByName(@Payload() name: string) {\n    return this.productsService.findByName(name);\n  }\n\n  @EventPattern('find-by-category')\n  findByCategory(@Payload() category: string) {\n    return this.productsService.findByCategory(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './schemas/product.schema';\nimport { CategoryModule } from '../category/category.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n    CategoryModule,\n  ],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                escapeRegex\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCategory\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getStock\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        escapeRegex\n                        \n                    \n                \n            \n            \n                \nescapeRegex(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(partialName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStock(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { Product } from './schemas/product.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { CategoryService } from '../category/category.service';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { ProductResponseDto } from './dto/responses/product-response.dto';\nimport { mapProductToResponseDto } from '../../common/mappers/product.mapper';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel(Product.name) private readonly productModel: Model,\n  ) {}\n\n  async create(\n    createProductDto: CreateProductDto,\n  ): Promise> {\n    const categoryResponse = await CategoryService.prototype.findOneById(\n      createProductDto.category_id,\n    );\n    if (categoryResponse.status != 'success') {\n      throw new RpcException('Category not found');\n    }\n\n    // TODO:  validate vendor id later\n\n    const newProduct = await this.productModel.create(createProductDto);\n\n    const responseDto = mapProductToResponseDto(newProduct);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateProductDto: UpdateProductDto,\n  ): Promise> {\n    const product = await this.productModel\n      .findById(updateProductDto.id)\n      .exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n\n    if (updateProductDto.category_id != null) {\n      const categoryResponse = await CategoryService.prototype.findOneById(\n        updateProductDto.category_id,\n      );\n      if (categoryResponse.status != 'success') {\n        throw new RpcException('Category not found');\n      }\n      product.category_id = new mongoose.Types.ObjectId(\n        updateProductDto.category_id,\n      );\n    }\n\n    if (updateProductDto.name != null) {\n      product.name = updateProductDto.name;\n    }\n\n    if (updateProductDto.price != null) {\n      product.price = updateProductDto.price;\n    }\n\n    if (updateProductDto.vendor_id != null) {\n      product.vendor_id = updateProductDto.vendor_id;\n\n      // TODO:  validate vendor id later\n    }\n\n    if (updateProductDto.stock != null) {\n      product.stock = updateProductDto.stock;\n    }\n\n    if (updateProductDto.image != null) {\n      product.image = updateProductDto.image;\n    }\n\n    await product.save();\n\n    const responseDto = mapProductToResponseDto(product);\n\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findAll(): Promise> {\n    const products = await this.productModel.find().exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findOne(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    const responseDto = mapProductToResponseDto(product);\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  escapeRegex(text: string) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  async findByName(\n    partialName: string,\n  ): Promise> {\n    const escaped = this.escapeRegex(partialName);\n    const regex = new RegExp(escaped, 'i');\n    const products = await this.productModel\n      .find({ name: { $regex: regex } })\n      .exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findByCategory(\n    id: string,\n  ): Promise> {\n    const category = await CategoryService.prototype.findOneById(id);\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n    const products = await this.productModel.find({ category_id: id }).exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async getStock(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    return {\n      message: null,\n      status: 'success',\n      data: product.stock,\n    };\n  }\n\n  async updateStock(\n    id: string,\n    stock: number,\n  ): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    if (stock > {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    await this.productModel.findByIdAndDelete(id).exec();\n    return {\n      message: null,\n      status: 'success',\n      data: id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCategoryDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/update-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/update-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/dto/api-response.interface.ts\n            \n            interface\n            ApiResponseInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/dto/api-response.interface.ts\n            \n            type alias\n            Status\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/mappers/category.mapper.ts\n            \n            function\n            mapCategoryToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/mappers/product.mapper.ts\n            \n            function\n            mapProductToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-response.dto.ts\n            \n            class\n            CategoryResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-tree-response.dto.ts\n            \n            interface\n            CategoryTreeResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            type alias\n            CategoryDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/products/dto/responses/product-response.dto.ts\n            \n            class\n            ProductResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/products/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            type alias\n            ProductDocument\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/mongoose : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            mongoose : ^8.12.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            mapCategoryToResponseDto   (src/.../category.mapper.ts)\n                        \n                        \n                            mapProductToResponseDto   (src/.../product.mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/mappers/category.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapCategoryToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapCategoryToResponseDto(category: CategoryDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CategoryResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/mappers/product.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapProductToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapProductToResponseDto(product: ProductDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            ProductDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ProductResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n    \n  \n\n\n\n\n\n\nDescription\nThis project is a Product & Inventory Management Microservice built with NestJS, MongoDB (via Mongoose), and RabbitMQ. It provides  microservice event patterns to handle:\n\nProduct CRUD operations\nCategory management\nInventory tracking and stock updates\n\nThe microservice leverages NestJS's modular architecture to separate concerns into distinct modules (e.g., products and categories) and integrates with RabbitMQ for asynchronous messaging.\nProject Setup\nInstallation\n\nClone the repository:\nExample :git clone git@github.com:Algos70/micro-services.git\ncd backend-services/product-and-inventory\nInstall dependencies:\nExample :npm install\n\nCompile and Run the Project\nDevelopment Mode\nExample :npm run start:devProduction Mode\nExample :npm run build\nnpm run start:prodThe application will connect to your MongoDB instance and RabbitMQ as configured in the project.\nCompodoc Documentation\nThis project uses Compodoc to automatically generate project documentation.\nGenerating Documentation\n\nGenerate the documentation:\nExample :npx compodoc -p tsconfig.json\nServe the documentation locally:\nExample :npx compodoc -s\n\nOpen your browser and navigate to http://localhost:8080 (or the URL provided by Compodoc) to view your project's documentation.\nDeployment\nWhen you're ready to deploy your NestJS application to production, consider the following:\n\nEnsure your environment variables are properly set.\nBuild your project using npm run build and run it with npm run start:prod.\nFor additional deployment guidelines, please refer to the NestJS Deployment Docs.\n\nResources\n\nNestJS Documentation\nMongoDB Documentation\nRabbitMQ Documentation\nCompodoc Documentation\nFor questions and support, join the NestJS Discord channel.\n\nSupport\nNestJS is an MIT-licensed open source project. It can grow thanks to the sponsors and support of the community. To support the project, please visit the NestJS support page.\nStay in Touch\n\nAuthor: [Your Name or Team]\nWebsite: https://yourprojectwebsite.com\nTwitter: @your_twitter\n\nLicense\nThis project is licensed under the MIT License. See the LICENSE file for details.\nExample :\n---\n\nSimply update the placeholder URLs and details (like GitHub repository URL, author, website, etc.) to match your project specifics.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                        \n                            Status   (src/.../api-response.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/modules/products/schemas/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/common/dto/api-response.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                        \"success\" | \"error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/modules/products/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

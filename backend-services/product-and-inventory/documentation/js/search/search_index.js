var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.019,1,1.697]],["body/classes/AllExceptionsFilter.html",[0,0.018,1,2.258,2,0.994,3,0.42,4,0.42,5,0.367,6,2.449,7,4.061,8,4.631,9,0.367,10,2.258,11,4.631,12,4.061,13,3.539,14,4.631,15,4.981,16,0.739,17,2.966,18,1.48,19,0.038,20,0.599,21,0.42,22,1.48,23,2.966,24,1.48,25,4.631,26,1.242,27,1.096,28,2.449,29,1.48,30,2.027,31,2.966,32,2.108,33,2.966,34,0.42,35,2.258,36,5.388,37,2.966,38,3.446,39,0.821,40,4.061,41,2.966,42,2.966,43,1.5,44,2.966,45,2.966,46,2.886,47,2.966,48,2.966,49,1.48,50,1.853,51,1.649,52,2.966,53,0.025,54,0.025]],["title/interfaces/ApiResponseInterface.html",[30,1.523,55,1.697]],["body/interfaces/ApiResponseInterface.html",[3,0.523,4,0.523,5,0.457,9,0.457,19,0.038,21,0.769,30,2.344,34,0.665,38,3.393,39,1.043,43,2.116,46,2.626,49,2.94,50,3.393,53,0.029,54,0.029,55,2.055,56,2.626,57,2.626,58,2.626,59,1.294,60,5.162,61,2.309]],["title/modules/AppModule.html",[62,1.373,63,1.906]],["body/modules/AppModule.html",[0,0.019,3,0.43,4,0.43,5,0.376,19,0.039,26,1.312,27,1.123,34,0.43,53,0.025,54,0.025,62,2.111,63,3.529,64,1.368,65,1.368,66,1.899,67,1.899,68,1.517,69,2.58,70,1.899,71,2.51,72,2.51,73,2.708,74,3.018,75,2.58,76,1.899,77,1.899,78,3.04,79,2.935,80,2.16,81,1.238,82,4.154,83,1.368,84,3.04,85,3.04,86,3.04,87,3.04,88,3.04,89,3.04,90,3.04,91,5.262,92,3.04,93,3.04,94,2.51,95,3.04,96,3.04,97,3.04,98,3.04,99,3.04,100,3.04,101,1.517]],["title/classes/Category.html",[0,0.019,102,0.841]],["body/classes/Category.html",[0,0.02,2,1.112,3,0.47,4,0.47,5,0.41,9,0.41,16,1.092,19,0.038,20,0.991,21,0.738,26,1.092,34,0.694,35,1.846,39,0.885,43,1.811,53,0.027,54,0.027,59,1.207,81,1.352,83,1.972,102,1.534,103,2.073,104,4.047,105,2.736,106,2.74,107,4.047,108,3.319,109,3.112,110,2.74,111,3.616,112,3.616,113,3.616,114,3.319,115,4.047,116,2.736,117,2.74,118,3.112,119,2.073,120,2.74,121,2.74,122,2.74,123,2.073,124,2.74]],["title/controllers/CategoryController.html",[125,1.697,126,1.906]],["body/controllers/CategoryController.html",[0,0.013,1,1.175,3,0.299,4,0.299,5,0.261,9,0.261,10,1.769,16,1.278,18,2.279,19,0.038,20,0.923,21,0.647,22,2.279,24,2.558,26,1.197,27,0.78,29,1.054,34,0.299,39,1.06,51,2.851,53,0.02,54,0.02,101,1.054,102,1.473,105,3.202,125,1.769,126,1.987,127,1.744,128,1.587,129,2.26,130,3.515,131,3.515,132,2.626,133,3.515,134,2.626,135,1.987,136,1.744,137,2.395,138,2.626,139,2.113,140,1.501,141,2.626,142,2.113,143,1.974,144,4.412,145,3.026,146,2.113,147,3.181,148,2.113,149,1.744,150,2.626,151,2.113,152,1.987,153,2.113,154,1.744,155,2.626,156,2.113,157,1.744,158,2.669,159,2.626,160,2.113,161,1.744,162,1.744,163,1.744,164,1.722,165,1.744,166,1.32,167,2.26,168,1.32,169,1.744,170,1.744,171,1.744,172,1.32,173,1.744,174,2.113,175,1.744,176,2.113,177,2.113,178,2.113,179,2.113,180,2.113,181,2.113,182,2.113,183,2.113,184,2.113,185,2.113]],["title/modules/CategoryModule.html",[62,1.373,73,1.523]],["body/modules/CategoryModule.html",[0,0.021,3,0.492,4,0.492,5,0.429,19,0.038,20,0.702,26,1.371,27,1.283,34,0.492,53,0.028,54,0.028,62,2.256,64,1.563,65,1.563,66,2.169,67,2.169,68,1.733,69,3.131,70,2.169,73,2.813,75,2.818,76,2.169,77,2.169,79,2.467,80,2.467,81,1.415,101,2.251,102,0.957,116,2.169,123,2.818,126,3.131,164,2.537,165,2.867,186,2.867,187,2.867,188,3.473,189,3.473,190,2.867,191,2.867,192,2.867]],["title/classes/CategoryResponseDto.html",[0,0.019,193,1.523]],["body/classes/CategoryResponseDto.html",[0,0.024,2,1.298,3,0.548,4,0.548,5,0.479,9,0.479,16,1.315,19,0.037,20,1.066,21,0.747,34,0.548,39,1.172,43,1.786,53,0.03,54,0.03,59,1.333,143,1.948,193,2.413,194,3.924,195,2.419,196,4.353,197,3.196,198,3.196,199,3.196]],["title/injectables/CategoryService.html",[164,1.373,200,1.697]],["body/injectables/CategoryService.html",[0,0.007,3,0.157,4,0.157,5,0.137,9,0.137,10,1.05,13,0.786,16,1.045,18,1.782,19,0.039,20,0.928,21,0.506,22,1.782,24,2.005,26,1.116,27,0.409,29,0.552,30,0.552,32,0.786,34,0.157,35,2.96,38,2.714,39,0.847,43,1.98,49,2.168,50,2.714,51,2.416,53,0.012,54,0.012,61,2.714,81,0.451,83,0.85,102,1.266,104,3.317,128,1.233,129,1.342,130,2.411,131,2.411,132,2.039,133,2.411,134,2.039,135,1.543,136,0.913,137,1.782,140,1.342,143,1.549,145,2.33,149,0.913,150,1.559,152,0.691,154,0.913,157,0.913,158,1.986,164,0.85,166,0.691,167,1.342,168,0.691,172,0.691,190,0.913,192,0.913,193,0.552,200,1.05,201,0.786,202,0.913,203,4.426,204,1.559,205,1.107,206,2.411,207,1.107,208,1.889,209,1.107,210,4.085,211,1.107,212,1.107,213,1.107,214,1.107,215,1.107,216,1.107,217,1.107,218,0.913,219,0.913,220,0.786,221,1.107,222,1.889,223,1.342,224,0.691,225,1.107,226,0.913,227,4.085,228,3.814,229,2.33,230,2.471,231,3.317,232,3.317,233,3.087,234,2.948,235,1.889,236,1.889,237,1.889,238,2.411,239,1.889,240,2.921,241,1.889,242,1.889,243,1.107,244,3.954,245,1.889,246,1.107,247,1.107,248,1.107,249,2.471,250,1.889,251,1.107,252,1.889,253,1.107,254,1.107,255,1.107,256,2.411,257,1.107,258,1.107,259,1.107,260,1.107,261,1.559,262,1.107,263,1.107,264,1.559,265,1.107,266,1.107,267,1.107,268,1.107,269,1.107,270,0.913,271,1.107,272,1.107,273,1.107,274,1.107,275,1.107,276,1.107,277,1.107,278,1.107,279,1.889,280,1.107,281,1.107,282,1.107,283,1.889,284,1.107,285,1.107,286,1.107,287,1.107,288,0.913,289,1.107]],["title/interfaces/CategoryTreeResponseDto.html",[55,1.697,224,1.906]],["body/interfaces/CategoryTreeResponseDto.html",[3,0.548,4,0.548,5,0.479,9,0.479,19,0.037,20,1.116,21,0.747,26,0.965,34,0.548,39,1.172,53,0.03,54,0.03,55,2.153,56,2.751,59,1.333,102,1.067,143,2.04,152,2.419,193,2.756,194,2.751,195,2.419,223,2.751,224,3.021,288,4.56]],["title/classes/CreateCategoryDto.html",[0,0.019,137,1.523]],["body/classes/CreateCategoryDto.html",[0,0.025,2,1.374,3,0.581,4,0.581,5,0.507,9,0.507,16,1.249,19,0.036,20,1.093,21,0.709,34,0.581,39,1.139,53,0.031,54,0.031,59,1.381,137,2.5,196,4.466,290,4.466,291,2.913,292,4.1,293,4.1]],["title/classes/CreateProductDto.html",[0,0.019,294,1.523]],["body/classes/CreateProductDto.html",[0,0.021,2,1.16,3,0.49,4,0.49,5,0.428,9,0.428,16,1.404,19,0.037,20,1.011,21,0.797,34,0.49,39,1.175,43,1.663,53,0.028,54,0.028,59,1.24,294,2.246,295,4.733,296,2.459,297,3.125,298,3.555,299,3.555,300,2.497,301,3.555,302,3.46,303,3.46,304,3.46,305,2.946,306,3.46,307,3.46,308,2.857]],["title/classes/Product.html",[0,0.019,309,1.243]],["body/classes/Product.html",[0,0.017,2,0.901,3,0.381,4,0.381,5,0.332,9,0.332,16,1.302,19,0.038,20,0.888,21,0.776,26,1.096,34,0.622,35,1.495,39,1.056,43,1.401,53,0.023,54,0.023,59,1.045,81,1.095,83,1.707,102,1.387,105,3.263,106,3.941,107,4.717,109,2.695,110,2.219,111,2.219,112,3.131,115,4.526,116,2.369,117,2.219,118,2.695,120,2.219,121,4.312,122,2.219,297,2.745,298,3.123,299,3.123,300,2.193,301,3.123,305,2.655,309,1.545,310,1.679,311,2.689,312,2.689,313,2.689,314,2.689,315,2.689,316,2.689,317,2.689,318,1.679,319,1.679,320,2.219]],["title/classes/ProductResponseDto.html",[0,0.019,321,1.697]],["body/classes/ProductResponseDto.html",[0,0.021,2,1.12,3,0.473,4,0.473,5,0.413,9,0.413,16,1.417,19,0.037,20,0.994,21,0.805,34,0.473,39,1.191,43,1.625,53,0.027,54,0.027,59,1.212,143,1.817,195,2.088,197,2.759,198,2.759,199,2.759,297,3.073,298,3.495,299,3.495,300,2.455,301,3.495,305,2.907,321,2.447,322,4.763,323,3.342,324,3.342,325,3.342,326,3.342]],["title/controllers/ProductsController.html",[125,1.697,327,1.906]],["body/controllers/ProductsController.html",[0,0.012,1,1.066,3,0.272,4,0.272,5,0.237,9,0.237,10,1.643,16,1.272,18,2.481,19,0.038,20,1.087,21,0.704,22,2.481,24,2.546,26,1.152,27,0.708,29,0.957,34,0.272,39,1.15,51,2.837,53,0.018,54,0.018,101,0.957,102,1.116,105,3.187,125,1.643,128,1.474,135,1.846,138,2.439,141,2.439,143,1.837,144,4.301,155,2.439,159,3.344,161,1.583,162,1.583,163,1.583,166,1.198,168,1.198,169,1.583,170,1.583,171,1.583,172,1.198,173,1.583,175,1.583,229,2.099,294,2.306,300,2.481,305,2.005,309,2.026,327,1.846,328,1.583,329,3.344,330,2.439,331,2.439,332,2.955,333,2.955,334,2.439,335,1.583,336,1.917,337,2.099,338,1.917,339,1.917,340,1.917,341,1.917,342,1.917,343,1.583,344,1.917,345,1.917,346,1.917,347,1.917,348,1.917,349,1.583,350,2.57,351,1.917,352,1.583,353,1.917,354,1.799,355,1.583,356,2.099,357,1.917,358,1.917,359,1.917,360,1.917,361,1.917,362,1.917,363,1.917,364,1.917,365,1.917,366,1.917,367,1.917,368,1.917,369,1.917,370,1.917,371,1.917]],["title/modules/ProductsModule.html",[62,1.373,74,1.697]],["body/modules/ProductsModule.html",[0,0.02,3,0.47,4,0.47,5,0.41,19,0.038,20,0.671,26,1.388,27,1.226,34,0.47,53,0.027,54,0.027,62,2.207,64,1.494,65,1.494,66,2.073,67,2.073,68,1.656,69,3.062,70,2.073,73,2.778,74,3.204,75,2.736,76,2.073,77,2.073,79,3.112,80,2.358,81,1.352,101,2.186,116,2.073,191,2.74,309,1.352,319,2.736,327,3.062,354,2.778,355,2.74,372,2.74,373,2.74,374,3.319,375,3.319,376,3.319,377,2.74,378,3.319,379,2.74]],["title/injectables/ProductsService.html",[200,1.697,354,1.523]],["body/injectables/ProductsService.html",[0,0.007,3,0.157,4,0.157,5,0.137,9,0.137,10,1.049,13,0.785,16,1.116,18,2.167,19,0.039,20,0.904,21,0.615,22,2.167,24,2.167,26,1.116,27,0.408,29,0.552,30,0.552,32,0.785,34,0.157,35,2.885,38,2.509,39,1.048,43,1.916,49,2.004,50,2.509,51,2.331,53,0.012,54,0.012,61,2.713,81,0.45,83,0.849,102,0.52,109,0.785,128,1.232,129,1.341,135,1.542,140,0.785,143,1.799,164,0.498,166,0.69,168,0.69,172,0.69,200,1.049,201,0.785,203,4.483,204,1.558,206,2.409,210,4.14,218,0.912,219,0.912,223,0.785,226,0.912,227,3.953,229,1.341,231,3.146,232,3.315,233,3.086,234,2.038,238,2.409,244,3.791,264,0.912,270,3.315,294,1.781,297,0.69,300,1.456,305,1.373,309,1.823,321,0.615,329,2.409,330,2.038,331,2.038,334,2.038,335,0.912,337,1.754,343,1.558,349,0.912,350,1.985,352,0.912,354,0.942,356,1.341,377,0.912,379,0.912,380,0.912,381,1.887,382,1.887,383,1.105,384,1.105,385,1.887,386,1.105,387,1.105,388,1.887,389,1.105,390,1.105,391,1.105,392,1.105,393,1.105,394,1.105,395,1.105,396,1.887,397,1.105,398,1.887,399,1.105,400,1.105,401,1.105,402,1.105,403,1.105,404,0.785,405,1.105,406,1.105,407,1.887,408,1.887,409,1.105,410,1.887,411,1.887,412,1.887,413,1.887,414,1.887,415,1.105,416,1.105,417,1.105,418,1.887,419,1.105,420,3.277,421,2.469,422,1.105,423,1.887,424,1.887,425,1.105,426,1.887,427,1.105,428,1.887,429,1.887,430,1.887,431,1.105,432,1.105,433,2.705,434,1.105,435,2.469,436,2.918,437,1.105,438,1.105,439,1.105,440,1.105,441,2.469,442,1.105,443,1.105,444,1.105,445,1.105]],["title/classes/UpdateCategoryDto.html",[0,0.019,158,1.697]],["body/classes/UpdateCategoryDto.html",[0,0.025,2,1.34,3,0.566,4,0.566,5,0.494,9,0.494,16,0.997,19,0.037,21,0.566,26,1.23,34,0.566,39,0.997,53,0.03,54,0.03,59,1.36,128,1.996,137,1.996,143,1.976,158,2.744,167,2.841,291,2.841,446,4.073,447,4.073,448,4.934,449,3.999,450,3.301,451,2.841,452,2.841]],["title/classes/UpdateProductDto.html",[0,0.019,350,1.697]],["body/classes/UpdateProductDto.html",[0,0.025,2,1.34,3,0.566,4,0.566,5,0.494,9,0.494,16,0.997,19,0.037,21,0.566,26,1.23,34,0.566,39,0.997,53,0.03,54,0.03,59,1.36,128,1.996,143,1.976,294,1.996,296,2.841,308,3.301,350,2.744,356,2.841,447,4.073,450,3.301,451,2.841,452,2.841,453,4.073,454,4.934]],["title/coverage.html",[455,3.418]],["body/coverage.html",[0,0.034,1,1.495,5,0.332,6,2.219,19,0.038,21,0.676,30,1.342,49,1.342,53,0.023,54,0.023,55,2.109,57,2.695,58,2.695,68,1.342,102,0.741,103,2.745,119,1.679,123,1.679,125,2.109,126,1.679,127,2.219,137,1.342,152,1.679,158,1.495,164,1.21,193,1.342,194,2.695,195,2.745,200,2.109,202,2.219,220,1.91,224,1.679,233,1.91,261,5.011,290,2.219,291,2.695,294,1.342,295,2.219,296,2.695,309,1.095,310,2.745,318,1.679,319,1.679,321,1.495,322,2.219,327,1.679,328,2.219,350,1.495,354,1.342,380,2.219,404,1.91,446,2.219,453,2.219,455,2.219,456,2.219,457,2.689,458,2.689,459,4.395,460,4.395,461,5.483,462,4.395,463,2.219,464,4.395,465,2.219,466,2.219,467,2.689,468,3.793,469,3.793,470,3.793,471,3.793,472,2.689,473,2.689,474,2.689,475,2.689]],["title/dependencies.html",[65,1.649,476,2.113]],["body/dependencies.html",[0,0.03,19,0.038,27,1.442,28,3.222,29,1.948,53,0.03,54,0.03,65,1.757,81,1.59,82,3.222,83,1.757,451,2.773,452,2.773,477,5.539,478,3.903,479,3.903,480,3.903,481,3.903,482,3.903,483,3.903,484,3.903,485,3.903,486,3.903,487,3.903,488,3.903,489,3.903,490,3.903,491,3.903,492,3.903,493,3.903,494,3.903,495,3.903]],["title/miscellaneous/functions.html",[496,1.277,497,3.024]],["body/miscellaneous/functions.html",[9,0.496,18,2.468,19,0.036,20,0.999,21,0.7,22,2.468,24,2.468,53,0.03,54,0.03,68,2.675,102,1.107,119,3.09,193,2.004,220,3.514,256,3.315,309,1.636,318,3.09,321,2.233,404,3.514,433,3.315,463,3.315,465,3.315,466,3.315,496,2.004,497,3.315,498,4.016,499,4.016,500,4.016]],["title/index.html",[9,0.316,501,2.56,502,2.56]],["body/index.html",[19,0.029,53,0.026,54,0.026,64,1.377,65,1.377,83,1.377,94,2.525,102,0.843,145,2.174,300,1.527,309,1.689,337,2.174,456,4.734,503,2.525,504,5.438,505,4.706,506,4.148,507,4.706,508,3.059,509,4.148,510,4.148,511,3.059,512,4.706,513,3.059,514,3.059,515,3.059,516,3.059,517,3.059,518,3.059,519,3.059,520,3.059,521,3.059,522,3.059,523,3.059,524,3.059,525,3.059,526,3.059,527,3.059,528,3.059,529,3.059,530,3.059,531,3.059,532,3.059,533,3.059,534,4.148,535,3.059,536,5.045,537,3.059,538,3.059,539,3.059,540,3.059,541,3.059,542,3.059,543,3.059,544,4.148,545,3.059,546,3.059,547,3.059,548,3.059,549,3.059,550,3.059,551,3.059,552,5.045,553,3.059,554,4.148,555,3.059,556,4.148,557,3.059,558,3.059,559,3.059,560,3.059,561,3.059,562,2.525,563,3.059,564,3.059,565,3.059,566,3.059,567,3.059,568,3.059,569,3.059,570,3.424,571,3.059,572,3.059,573,3.059]],["title/modules.html",[64,1.864]],["body/modules.html",[19,0.032,53,0.032,54,0.032,63,2.783,64,2.005,73,2.223,74,2.478,562,4.628,574,5.607,575,5.607,576,5.607]],["title/overview.html",[577,3.418]],["body/overview.html",[2,1.253,19,0.036,53,0.029,54,0.029,56,2.656,62,1.683,63,3.59,64,1.683,65,1.683,66,2.335,67,2.335,68,1.866,69,2.335,70,2.335,71,3.086,72,3.086,73,2.868,74,3.246,75,2.955,76,2.335,77,2.335,101,1.866,164,2.336,186,3.086,187,3.086,201,2.656,354,2.59,372,3.086,373,3.086,577,3.086,578,3.739,579,5.19,580,3.739]],["title/properties.html",[59,1.01,476,2.113]],["body/properties.html",[19,0.037,53,0.033,54,0.033,59,1.256,503,3.764,570,3.764,581,4.56,582,4.56,583,4.56,584,4.56]],["title/miscellaneous/typealiases.html",[496,1.277,585,3.664]],["body/miscellaneous/typealiases.html",[9,0.534,19,0.034,21,0.611,46,3.068,49,2.579,53,0.032,54,0.032,57,3.068,58,3.673,61,2.697,103,2.697,118,3.673,119,3.229,310,2.697,318,3.229,496,2.154,586,4.318,587,3.564,588,3.564,589,4.318]],["title/miscellaneous/variables.html",[496,1.277,590,3.024]],["body/miscellaneous/variables.html",[9,0.543,19,0.036,53,0.032,54,0.032,103,2.745,113,4.313,123,3.263,124,3.628,310,2.745,319,3.263,320,3.628,496,2.193,587,3.628,588,3.628,590,3.628,591,5.224]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":261,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":582,"title":{},"body":{"properties.html":{}}}],["0.10.5",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":579,"title":{},"body":{"overview.html":{}}}],["3",{"_index":578,"title":{},"body":{"overview.html":{}}}],["4.1.14",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["8.12.1",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":580,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":238,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["alias",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["already",{"_index":235,"title":{},"body":{"injectables/CategoryService.html":{}}}],["amqp",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["any).message",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["apiresponseinterface",{"_index":30,"title":{"interfaces/ApiResponseInterface.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":524,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":203,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["asynchronous",{"_index":530,"title":{},"body":{"index.html":{}}}],["author",{"_index":584,"title":{},"body":{"properties.html":{}}}],["automatically",{"_index":553,"title":{},"body":{"index.html":{}}}],["await",{"_index":227,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["backend",{"_index":541,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":562,"title":{},"body":{"index.html":{},"modules.html":{}}}],["buildcompodoc",{"_index":550,"title":{},"body":{"index.html":{}}}],["built",{"_index":508,"title":{},"body":{"index.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(rpcexception",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":145,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["categories.foreach((category",{"_index":278,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.length",{"_index":275,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.map((category",{"_index":272,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category",{"_index":102,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["category.controller",{"_index":189,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":167,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":292,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:3",{"_index":293,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":449,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["category.name",{"_index":192,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["category.parentcategory",{"_index":253,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.parentid",{"_index":279,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.save",{"_index":255,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.service",{"_index":165,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":378,"title":{},"body":{"modules/ProductsModule.html":{}}}],["category/category.service",{"_index":402,"title":{},"body":{"injectables/ProductsService.html":{}}}],["category/schemas/category.schema",{"_index":317,"title":{},"body":{"classes/Product.html":{}}}],["category_id",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["categorycontroller",{"_index":126,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorydocument",{"_index":119,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["categorymodel",{"_index":208,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":73,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryresponse",{"_index":407,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponse.status",{"_index":410,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponsedto",{"_index":193,"title":{"classes/CategoryResponseDto.html":{}},"body":{"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["categoryschema",{"_index":123,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":164,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice.prototype.findonebyid",{"_index":408,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryservice.prototype.findonebyid(id",{"_index":443,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categorytreeresponsedto",{"_index":224,"title":{"interfaces/CategoryTreeResponseDto.html":{}},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["categorywithsamename",{"_index":250,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cd",{"_index":540,"title":{},"body":{"index.html":{}}}],["children",{"_index":288,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{}}}],["childrenmap",{"_index":276,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(category.parentid)!.push(category",{"_index":282,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(root.id",{"_index":289,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.has(category.parentid",{"_index":280,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.set(category.parentid",{"_index":281,"title":{},"body":{"injectables/CategoryService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clone",{"_index":534,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":186,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":187,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":372,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":374,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":373,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["common/dto/api",{"_index":219,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["common/filters/exception.filter",{"_index":169,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["common/mappers/category.mapper",{"_index":221,"title":{},"body":{"injectables/CategoryService.html":{}}}],["common/mappers/product.mapper",{"_index":405,"title":{},"body":{"injectables/ProductsService.html":{}}}],["compile",{"_index":543,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":552,"title":{},"body":{"index.html":{}}}],["compose",{"_index":548,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":526,"title":{},"body":{"index.html":{}}}],["connected",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection.on('connected",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnected",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnecting",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('open",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('reconnected",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('mongodb",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["constructor",{"_index":204,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["constructor(categorymodel",{"_index":205,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(private",{"_index":171,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productmodel",{"_index":383,"title":{},"body":{"injectables/ProductsService.html":{}}}],["controller",{"_index":125,"title":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controllers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["coverage",{"_index":455,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":128,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["create(@payload",{"_index":173,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["create(createcategorydto",{"_index":136,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["create(createproductdto",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createcategorydto",{"_index":137,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto.name",{"_index":230,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createcategorydto.parentid",{"_index":237,"title":{},"body":{"injectables/CategoryService.html":{}}}],["created",{"_index":246,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createproductdto",{"_index":294,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto.category_id",{"_index":409,"title":{},"body":{"injectables/ProductsService.html":{}}}],["crud",{"_index":517,"title":{},"body":{"index.html":{}}}],["data",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["decorators",{"_index":105,"title":{},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["delete",{"_index":129,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["delete(@payload",{"_index":177,"title":{},"body":{"controllers/CategoryController.html":{}}}],["delete(id",{"_index":140,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":503,"title":{},"body":{"index.html":{},"properties.html":{}}}],["disconnected",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["disconnecting",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["distinct",{"_index":527,"title":{},"body":{"index.html":{}}}],["docker",{"_index":547,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":456,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/api",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dto/requests/create",{"_index":166,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/requests/update",{"_index":168,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/responses/category",{"_index":222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["dto/responses/product",{"_index":403,"title":{},"body":{"injectables/ProductsService.html":{}}}],["e.g",{"_index":528,"title":{},"body":{"index.html":{}}}],["error",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"miscellaneous/typealiases.html":{}}}],["errorresponse",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorresponse.message",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["escaped",{"_index":439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex",{"_index":381,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex(text",{"_index":388,"title":{},"body":{"injectables/ProductsService.html":{}}}],["event",{"_index":514,"title":{},"body":{"index.html":{}}}],["eventpattern",{"_index":162,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('create",{"_index":138,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('find",{"_index":144,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('remove",{"_index":141,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('update",{"_index":159,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["example",{"_index":536,"title":{},"body":{"index.html":{}}}],["exception",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.geterror",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":231,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["exist",{"_index":240,"title":{},"body":{"injectables/CategoryService.html":{}}}],["exists",{"_index":236,"title":{},"body":{"injectables/CategoryService.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["express",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":447,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["fetch",{"_index":273,"title":{},"body":{"injectables/CategoryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["filter((category",{"_index":284,"title":{},"body":{"injectables/CategoryService.html":{}}}],["find",{"_index":264,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["findall",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findallcategories",{"_index":130,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallparentcategories",{"_index":131,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid",{"_index":132,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid(@payload",{"_index":179,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findallsubcategoriesbyid(id",{"_index":149,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findbycategory",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbycategory(@payload",{"_index":370,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(category",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(id",{"_index":392,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(updateproductdto.id",{"_index":419,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyname",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyname(@payload",{"_index":368,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(name",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(partialname",{"_index":394,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findcategorytree",{"_index":133,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findone",{"_index":229,"title":{},"body":{"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone(@payload",{"_index":359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findone(id",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findonebyid",{"_index":134,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findonebyid(@payload",{"_index":182,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findonebyid(id",{"_index":154,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findstock",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(@payload",{"_index":364,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(id",{"_index":345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["formattederror",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["found",{"_index":270,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["function",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":497,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":554,"title":{},"body":{"index.html":{}}}],["generating",{"_index":555,"title":{},"body":{"index.html":{}}}],["getstock",{"_index":382,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getstock(id",{"_index":398,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":501,"title":{"index.html":{}},"body":{}}],["git",{"_index":537,"title":{},"body":{"index.html":{}}}],["git@github.com:algos70/micro",{"_index":538,"title":{},"body":{"index.html":{}}}],["handle",{"_index":516,"title":{},"body":{"index.html":{}}}],["host",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost:8080",{"_index":564,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":118,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":143,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["identifier",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["injectable",{"_index":200,"title":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":201,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":218,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["injectmodel(category.name",{"_index":225,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectmodel(product.name",{"_index":406,"title":{},"body":{"injectables/ProductsService.html":{}}}],["install",{"_index":556,"title":{},"body":{"index.html":{}}}],["installation",{"_index":533,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":529,"title":{},"body":{"index.html":{}}}],["interface",{"_index":55,"title":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":56,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"overview.html":{}}}],["inventory",{"_index":505,"title":{},"body":{"index.html":{}}}],["later",{"_index":414,"title":{},"body":{"injectables/ProductsService.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["leverages",{"_index":521,"title":{},"body":{"index.html":{}}}],["license",{"_index":570,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":571,"title":{},"body":{"index.html":{}}}],["management",{"_index":506,"title":{},"body":{"index.html":{}}}],["manager",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":277,"title":{},"body":{"injectables/CategoryService.html":{}}}],["map((root",{"_index":285,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto",{"_index":220,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(category",{"_index":256,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(newcategory",{"_index":245,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto(subcategory",{"_index":266,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapproducttoresponsedto",{"_index":404,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapproducttoresponsedto(newproduct",{"_index":417,"title":{},"body":{"injectables/ProductsService.html":{}}}],["mapproducttoresponsedto(product",{"_index":433,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["messaging",{"_index":531,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["microservice",{"_index":507,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":496,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":573,"title":{},"body":{"index.html":{}}}],["mode",{"_index":546,"title":{},"body":{"index.html":{}}}],["model",{"_index":206,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["modular",{"_index":523,"title":{},"body":{"index.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/category/category.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":510,"title":{},"body":{"index.html":{}}}],["mongodb://localhost:27017/nest",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema.types.objectid",{"_index":122,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["mongoose.types.objectid",{"_index":109,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["mongoose.types.objectid(parentcategory._id",{"_index":254,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mongoosemodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":191,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":563,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":509,"title":{},"body":{"index.html":{}}}],["nestjs's",{"_index":522,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":451,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":233,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newcategory",{"_index":241,"title":{},"body":{"injectables/CategoryService.html":{}}}],["newproduct",{"_index":415,"title":{},"body":{"injectables/ProductsService.html":{}}}],["npm",{"_index":557,"title":{},"body":{"index.html":{}}}],["npx",{"_index":558,"title":{},"body":{"index.html":{}}}],["null",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["object",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["occurred",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["of(formattederror",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["onconnectioncreate",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["one",{"_index":155,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["open",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["operations",{"_index":518,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":577,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":559,"title":{},"body":{"index.html":{}}}],["package",{"_index":476,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":147,"title":{},"body":{"controllers/CategoryController.html":{}}}],["parentcategories",{"_index":267,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategories.map((category",{"_index":268,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategory",{"_index":104,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{}}}],["parentcategory._id",{"_index":243,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentid",{"_index":196,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{}}}],["partialname",{"_index":396,"title":{},"body":{"injectables/ProductsService.html":{}}}],["partialtype",{"_index":450,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createcategorydto",{"_index":448,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":454,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["patterns",{"_index":515,"title":{},"body":{"index.html":{}}}],["payload",{"_index":163,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["price",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["private",{"_index":226,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["process.env.mongo_url",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["product",{"_index":309,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["product.category_id",{"_index":422,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.dto",{"_index":356,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:2",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:3",{"_index":306,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:4",{"_index":307,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":308,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:6",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:7",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.image",{"_index":431,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.name",{"_index":379,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.price",{"_index":425,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.save",{"_index":432,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.stock",{"_index":429,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.vendor_id",{"_index":427,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdocument",{"_index":318,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["production",{"_index":545,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":385,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productresponsedto",{"_index":321,"title":{"classes/ProductResponseDto.html":{}},"body":{"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["products",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["products.controller",{"_index":376,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.map((product",{"_index":435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service",{"_index":355,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productschema",{"_index":319,"title":{},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":327,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":74,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":354,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["project's",{"_index":568,"title":{},"body":{"index.html":{}}}],["promise",{"_index":210,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["prop",{"_index":115,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({required",{"_index":106,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({type",{"_index":110,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["properties",{"_index":59,"title":{"properties.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"properties.html":{}}}],["provided",{"_index":566,"title":{},"body":{"index.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["provides",{"_index":513,"title":{},"body":{"index.html":{}}}],["rabbitmq",{"_index":512,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":172,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["reconnected",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["ref",{"_index":112,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["reflect",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["regexp(escaped",{"_index":442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["remove",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(@payload",{"_index":362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(id",{"_index":347,"title":{},"body":{"controllers/ProductsController.html":{}}}],["repository",{"_index":535,"title":{},"body":{"index.html":{}}}],["required",{"_index":121,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["resources",{"_index":569,"title":{},"body":{"index.html":{}}}],["response",{"_index":257,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data",{"_index":259,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data.length",{"_index":260,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.dto",{"_index":223,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"injectables/ProductsService.html":{}}}],["response.dto.ts",{"_index":195,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":197,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:3",{"_index":198,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:4",{"_index":199,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:5",{"_index":325,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:6",{"_index":326,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:7",{"_index":323,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:8",{"_index":324,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.interface",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["response.interface.ts",{"_index":58,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["responsedto",{"_index":244,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["root.id",{"_index":286,"title":{},"body":{"injectables/CategoryService.html":{}}}],["root.name",{"_index":287,"title":{},"body":{"injectables/CategoryService.html":{}}}],["roots",{"_index":283,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('category",{"_index":234,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('parent",{"_index":239,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception('product",{"_index":420,"title":{},"body":{"injectables/ProductsService.html":{}}}],["rpcexceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["run",{"_index":544,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["s",{"_index":561,"title":{},"body":{"index.html":{}}}],["s]/g",{"_index":438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["same",{"_index":251,"title":{},"body":{"injectables/CategoryService.html":{}}}],["schema",{"_index":116,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{}}}],["schemafactory",{"_index":117,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["schemafactory.createforclass(category",{"_index":124,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":320,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":190,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["schemas/product.schema",{"_index":377,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["separate",{"_index":525,"title":{},"body":{"index.html":{}}}],["services.git",{"_index":539,"title":{},"body":{"index.html":{}}}],["services/product",{"_index":542,"title":{},"body":{"index.html":{}}}],["setup",{"_index":532,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["src/.../api",{"_index":589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../category.mapper.ts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category.schema.ts",{"_index":587,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.mapper.ts",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":588,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/dto/api",{"_index":57,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:8",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/mappers/category.mapper.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/mappers/product.mapper.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/category/category.controller.ts",{"_index":127,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/modules/category/category.controller.ts:14",{"_index":139,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:19",{"_index":160,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:24",{"_index":142,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:29",{"_index":151,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:34",{"_index":148,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:39",{"_index":156,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:44",{"_index":146,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:49",{"_index":153,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.module.ts",{"_index":188,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/modules/category/category.service.ts",{"_index":202,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/modules/category/category.service.ts:104",{"_index":211,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:117",{"_index":214,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:139",{"_index":213,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:14",{"_index":207,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:156",{"_index":216,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:173",{"_index":212,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:188",{"_index":215,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:19",{"_index":209,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:64",{"_index":217,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/dto/requests/create",{"_index":290,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/requests/update",{"_index":446,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/responses/category",{"_index":194,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["src/modules/category/schemas/category.schema.ts",{"_index":103,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/category/schemas/category.schema.ts:16",{"_index":114,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/category/schemas/category.schema.ts:9",{"_index":108,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/products/dto/requests/create",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/requests/update",{"_index":453,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/responses/product",{"_index":322,"title":{},"body":{"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:14",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:19",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:24",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":351,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:34",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:39",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:44",{"_index":353,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:49",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:54",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":375,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":380,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:108",{"_index":397,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:121",{"_index":389,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:125",{"_index":395,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:14",{"_index":384,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:143",{"_index":393,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:161",{"_index":399,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:173",{"_index":401,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:19",{"_index":386,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:193",{"_index":387,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:41",{"_index":400,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:96",{"_index":391,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/schemas/product.schema.ts",{"_index":310,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/products/schemas/product.schema.ts:10",{"_index":313,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:12",{"_index":314,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:14",{"_index":315,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:16",{"_index":316,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:18",{"_index":312,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:24",{"_index":311,"title":{},"body":{"classes/Product.html":{}}}],["started",{"_index":502,"title":{"index.html":{}},"body":{}}],["statements",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stock",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["subcategories",{"_index":150,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["subcategories.map((subcategory",{"_index":265,"title":{},"body":{"injectables/CategoryService.html":{}}}],["success",{"_index":61,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"miscellaneous/typealiases.html":{}}}],["successfully",{"_index":247,"title":{},"body":{"injectables/CategoryService.html":{}}}],["support",{"_index":574,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":575,"title":{},"body":{"modules.html":{}}}],["t",{"_index":60,"title":{},"body":{"interfaces/ApiResponseInterface.html":{}}}],["table",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":390,"title":{},"body":{"injectables/ProductsService.html":{}}}],["text.replace",{"_index":437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.categorymodel",{"_index":228,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.create",{"_index":242,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.find().exec",{"_index":271,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyid(id).exec",{"_index":269,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyidanddelete(id).exec",{"_index":262,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findone",{"_index":263,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.create(createcategorydto",{"_index":174,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.delete(id",{"_index":178,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallcategories",{"_index":184,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallparentcategories",{"_index":181,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallsubcategoriesbyid(id",{"_index":180,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findcategorytree",{"_index":185,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findonebyid(id",{"_index":183,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.update(updatecategorydto",{"_index":176,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.escaperegex(partialname",{"_index":440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findallcategories()).data",{"_index":274,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.findallsubcategoriesbyid(id",{"_index":258,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.productmodel",{"_index":418,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.create(createproductdto",{"_index":416,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find",{"_index":444,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find().exec",{"_index":434,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findbyidanddelete(id).exec",{"_index":445,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findone",{"_index":436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":357,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.delete(id",{"_index":363,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbycategory(category",{"_index":371,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyname(name",{"_index":369,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getstock(id",{"_index":365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(updateproductdto",{"_index":361,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updatestock(id",{"_index":367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["throw",{"_index":232,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["timestamps",{"_index":120,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["todo",{"_index":411,"title":{},"body":{"injectables/ProductsService.html":{}}}],["tracking",{"_index":519,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":152,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["true",{"_index":107,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["tsconfig.json",{"_index":560,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":585,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["types",{"_index":452,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["undefined",{"_index":111,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["under",{"_index":572,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":583,"title":{},"body":{"properties.html":{}}}],["up",{"_index":549,"title":{},"body":{"index.html":{}}}],["update",{"_index":135,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["update(@payload",{"_index":175,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["update(updatecategorydto",{"_index":157,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["update(updateproductdto",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatecategorydto",{"_index":158,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto.id",{"_index":248,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.name",{"_index":249,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.parentid",{"_index":252,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateproductdto",{"_index":350,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto.category_id",{"_index":421,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.image",{"_index":430,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.name",{"_index":423,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.price",{"_index":424,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.stock",{"_index":428,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.vendor_id",{"_index":426,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updates",{"_index":520,"title":{},"body":{"index.html":{}}}],["updatestock",{"_index":334,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatestock(@payload",{"_index":366,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updatestock(id",{"_index":352,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["url",{"_index":565,"title":{},"body":{"index.html":{}}}],["usefilters",{"_index":161,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["usefilters(allexceptionsfilter",{"_index":170,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["uses",{"_index":551,"title":{},"body":{"index.html":{}}}],["validate",{"_index":412,"title":{},"body":{"injectables/ProductsService.html":{}}}],["validator",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":590,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":413,"title":{},"body":{"injectables/ProductsService.html":{}}}],["vendor_id",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["version",{"_index":581,"title":{},"body":{"properties.html":{}}}],["via",{"_index":511,"title":{},"body":{"index.html":{}}}],["view",{"_index":567,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RpcException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exception.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        RpcException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../dto/api-response.interface';\n\n@Catch(RpcException)\nexport class AllExceptionsFilter implements RpcExceptionFilter {\n  catch(exception: RpcException, host: ArgumentsHost): Observable {\n    const errorResponse = exception.getError();\n    let message: string = '';\n    if (typeof errorResponse === 'string') {\n      message = errorResponse;\n    } else if (\n      typeof errorResponse === 'object' &&\n      'message' in errorResponse &&\n      errorResponse.message !== null\n    ) {\n      message = (errorResponse as any).message;\n    } else {\n      message = 'An unknown error occurred';\n    }\n    const formattedError: ApiResponseInterface = {\n      status: 'error',\n      message: message,\n      data: null,\n    };\n    return of(formattedError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponseInterface.html":{"url":"interfaces/ApiResponseInterface.html","title":"interface - ApiResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/api-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponseInterface {\n  status: Status;\n  message: string | null;\n  data: T | null;\n}\n\nexport type Status = 'success' | 'error';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Connection } from 'mongoose';\nimport { ProductsModule } from './modules/products/products.module';\nimport { CategoryModule } from './modules/category/category.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    CategoryModule,\n    MongooseModule.forRoot(\n      process.env.MONGO_URL || 'mongodb://localhost:27017/nest',\n      {\n        onConnectionCreate: (connection: Connection) => {\n          connection.on('connected', () => console.log('MongoDB Connected'));\n          connection.on('open', () => console.log('MongoDB Connection Open'));\n          connection.on('disconnected', () =>\n            console.log('MongoDB Disconnected'),\n          );\n          connection.on('reconnected', () =>\n            console.log('MongoDB Reconnected'),\n          );\n          connection.on('disconnecting', () =>\n            console.log('MongoDB Disconnecting'),\n          );\n        },\n      },\n    ),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/schemas/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parentCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CategoryDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Category {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    default: null,\n  })\n  parentCategory: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAllCategories\n                            \n                            \n                                    \n                                findAllParentCategories\n                            \n                            \n                                    \n                                findAllSubcategoriesById\n                            \n                            \n                                    \n                                findCategoryTree\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-parent-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-subcategories-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-category-tree')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-category-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @EventPattern('create-category')\n  create(@Payload() createCategoryDto: CreateCategoryDto) {\n    return this.categoryService.create(createCategoryDto);\n  }\n\n  @EventPattern('update-category')\n  update(@Payload() updateCategoryDto: UpdateCategoryDto) {\n    return this.categoryService.update(updateCategoryDto);\n  }\n\n  @EventPattern('remove-category')\n  delete(@Payload() id: string) {\n    return this.categoryService.delete(id);\n  }\n\n  @EventPattern('find-all-subcategories-by-id')\n  findAllSubcategoriesById(@Payload() id: string) {\n    return this.categoryService.findAllSubcategoriesById(id);\n  }\n\n  @EventPattern('find-all-parent-categories')\n  findAllParentCategories() {\n    return this.categoryService.findAllParentCategories();\n  }\n\n  @EventPattern('find-one-category-by-id')\n  findOneById(@Payload() id: string) {\n    return this.categoryService.findOneById(id);\n  }\n\n  @EventPattern('find-all-categories')\n  findAllCategories() {\n    return this.categoryService.findAllCategories();\n  }\n\n  @EventPattern('find-category-tree')\n  findCategoryTree() {\n    return this.categoryService.findCategoryTree();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category, CategorySchema } from './schemas/category.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.name, schema: CategorySchema },\n    ]),\n  ],\n  controllers: [CategoryController],\n  providers: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryResponseDto.html":{"url":"classes/CategoryResponseDto.html","title":"class - CategoryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CategoryResponseDto {\n  id: string;\n  name: string;\n  parentId: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllCategories\n                            \n                            \n                                    Async\n                                findAllParentCategories\n                            \n                            \n                                    Async\n                                findAllSubcategoriesById\n                            \n                            \n                                    Async\n                                findCategoryTree\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/category/category.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category } from './schemas/category.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { mapCategoryToResponseDto } from '../../common/mappers/category.mapper';\nimport { CategoryResponseDto } from './dto/responses/category-response.dto';\nimport { CategoryTreeResponseDto } from './dto/responses/category-tree-response.dto';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectModel(Category.name) private readonly categoryModel: Model,\n  ) {}\n\n  async create(\n    createCategoryDto: CreateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ name: createCategoryDto.name })\n      .exec();\n    if (category != null) {\n      throw new RpcException('Category already exists');\n    }\n\n    if (createCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: createCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      const newCategory = await this.categoryModel.create({\n        name: createCategoryDto.name,\n        parentCategory: parentCategory._id,\n      });\n\n      const responseDto = mapCategoryToResponseDto(newCategory);\n\n      return {\n        status: 'success',\n        data: responseDto,\n        message: null,\n      };\n    }\n\n    const newCategory = await this.categoryModel.create({\n      name: createCategoryDto.name,\n      parentCategory: null,\n    });\n\n    const responseDto = mapCategoryToResponseDto(newCategory);\n\n    return {\n      status: 'success',\n      message: 'Category created successfully',\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateCategoryDto: UpdateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ _id: updateCategoryDto.id })\n      .exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    if (updateCategoryDto.name != null) {\n      const categoryWithSameName = await this.categoryModel\n        .findOne({ name: updateCategoryDto.name })\n        .exec();\n      if (categoryWithSameName != null) {\n        throw new RpcException('Category with same name already exists');\n      }\n      category.name = updateCategoryDto.name;\n    }\n\n    if (updateCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: updateCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      category.parentCategory = new mongoose.Types.ObjectId(parentCategory._id);\n    }\n\n    await category.save();\n\n    const responseDto = mapCategoryToResponseDto(category);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async delete(id: string): Promise> {\n    const response = await this.findAllSubcategoriesById(id);\n    if (response.data !== null && response.data.length !== 0) {\n      throw new RpcException('Category has subcategories');\n    }\n    await this.categoryModel.findByIdAndDelete(id).exec();\n    return {\n      status: 'success',\n      message: null,\n      data: id,\n    };\n  }\n\n  async findAllSubcategoriesById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findOne({ _id: id }).exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    const subcategories = await this.categoryModel\n      .find({ parentCategory: id })\n      .exec();\n\n    const responseDto = subcategories.map((subcategory) =>\n      mapCategoryToResponseDto(subcategory),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllParentCategories(): Promise\n  > {\n    const parentCategories = await this.categoryModel\n      .find({ parentCategory: null })\n      .exec();\n\n    const responseDto = parentCategories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findOneById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findById(id).exec();\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n\n    const responseDto = mapCategoryToResponseDto(category);\n\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllCategories(): Promise\n  > {\n    const categories = await this.categoryModel.find().exec();\n\n    const responseDto = categories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findCategoryTree(): Promise\n  > {\n    // fetch all categories\n    const categories = (await this.findAllCategories()).data;\n    if (categories == null || categories.length === 0) {\n      return {\n        status: 'success',\n        message: null,\n        data: [],\n      };\n    }\n\n    const childrenMap = new Map();\n    categories.forEach((category) => {\n      if (category.parentId) {\n        if (!childrenMap.has(category.parentId)) {\n          childrenMap.set(category.parentId, []);\n        }\n        childrenMap.get(category.parentId)!.push(category);\n      }\n    });\n\n    const roots = categories\n      .filter((category) => category.parentId === null)\n      .map((root) => ({\n        id: root.id,\n        name: root.name,\n        children: childrenMap.get(root.id) || [],\n      }));\n\n    return { status: 'success', message: null, data: roots };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryTreeResponseDto.html":{"url":"interfaces/CategoryTreeResponseDto.html","title":"interface - CategoryTreeResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryTreeResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-tree-response.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     CategoryResponseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CategoryResponseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryResponseDto } from './category-response.dto';\n\nexport interface CategoryTreeResponseDto {\n  id: string;\n  name: string;\n  children: CategoryResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n  name: string;\n  parentId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductDto {\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category_id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Category } from '../../category/schemas/category.schema';\n\nexport type ProductDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop({ required: true })\n  name: string;\n  @Prop({ required: true })\n  price: number;\n  @Prop({ required: true })\n  stock: number;\n  @Prop({ required: true })\n  vendor_id: string;\n  @Prop()\n  image: string;\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    required: true,\n  })\n  category_id: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductResponseDto.html":{"url":"classes/ProductResponseDto.html","title":"class - ProductResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/responses/product-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductResponseDto {\n  id: string;\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByCategory\n                            \n                            \n                                    \n                                findByName\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findStock\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-products')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(category: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-name')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    findStock(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @EventPattern('create-product')\n  create(@Payload() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @EventPattern('find-all-products')\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n  @EventPattern('find-one-product')\n  findOne(@Payload() id: string) {\n    return this.productsService.findOne(id);\n  }\n\n  @EventPattern('update-product')\n  update(@Payload() updateProductDto: UpdateProductDto) {\n    return this.productsService.update(updateProductDto);\n  }\n\n  @EventPattern('remove-product')\n  remove(@Payload() id: string) {\n    return this.productsService.delete(id);\n  }\n\n  @EventPattern('find-stock')\n  findStock(@Payload() id: string) {\n    return this.productsService.getStock(id);\n  }\n\n  @EventPattern('update-stock')\n  updateStock(@Payload() id: string, stock: number) {\n    return this.productsService.updateStock(id, stock);\n  }\n\n  @EventPattern('find-by-name')\n  findByName(@Payload() name: string) {\n    return this.productsService.findByName(name);\n  }\n\n  @EventPattern('find-by-category')\n  findByCategory(@Payload() category: string) {\n    return this.productsService.findByCategory(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './schemas/product.schema';\nimport { CategoryModule } from '../category/category.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n    CategoryModule,\n  ],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                escapeRegex\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCategory\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getStock\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        escapeRegex\n                        \n                    \n                \n            \n            \n                \nescapeRegex(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(partialName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStock(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { Product } from './schemas/product.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { CategoryService } from '../category/category.service';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { ProductResponseDto } from './dto/responses/product-response.dto';\nimport { mapProductToResponseDto } from '../../common/mappers/product.mapper';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel(Product.name) private readonly productModel: Model,\n  ) {}\n\n  async create(\n    createProductDto: CreateProductDto,\n  ): Promise> {\n    const categoryResponse = await CategoryService.prototype.findOneById(\n      createProductDto.category_id,\n    );\n    if (categoryResponse.status != 'success') {\n      throw new RpcException('Category not found');\n    }\n\n    // TODO:  validate vendor id later\n\n    const newProduct = await this.productModel.create(createProductDto);\n\n    const responseDto = mapProductToResponseDto(newProduct);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateProductDto: UpdateProductDto,\n  ): Promise> {\n    const product = await this.productModel\n      .findById(updateProductDto.id)\n      .exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n\n    if (updateProductDto.category_id != null) {\n      const categoryResponse = await CategoryService.prototype.findOneById(\n        updateProductDto.category_id,\n      );\n      if (categoryResponse.status != 'success') {\n        throw new RpcException('Category not found');\n      }\n      product.category_id = new mongoose.Types.ObjectId(\n        updateProductDto.category_id,\n      );\n    }\n\n    if (updateProductDto.name != null) {\n      product.name = updateProductDto.name;\n    }\n\n    if (updateProductDto.price != null) {\n      product.price = updateProductDto.price;\n    }\n\n    if (updateProductDto.vendor_id != null) {\n      product.vendor_id = updateProductDto.vendor_id;\n\n      // TODO:  validate vendor id later\n    }\n\n    if (updateProductDto.stock != null) {\n      product.stock = updateProductDto.stock;\n    }\n\n    if (updateProductDto.image != null) {\n      product.image = updateProductDto.image;\n    }\n\n    await product.save();\n\n    const responseDto = mapProductToResponseDto(product);\n\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findAll(): Promise> {\n    const products = await this.productModel.find().exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findOne(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    const responseDto = mapProductToResponseDto(product);\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  escapeRegex(text: string) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  async findByName(\n    partialName: string,\n  ): Promise> {\n    const escaped = this.escapeRegex(partialName);\n    const regex = new RegExp(escaped, 'i');\n    const products = await this.productModel\n      .find({ name: { $regex: regex } })\n      .exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findByCategory(\n    id: string,\n  ): Promise> {\n    const category = await CategoryService.prototype.findOneById(id);\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n    const products = await this.productModel.find({ category_id: id }).exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async getStock(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    return {\n      message: null,\n      status: 'success',\n      data: product.stock,\n    };\n  }\n\n  async updateStock(\n    id: string,\n    stock: number,\n  ): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    if (stock > {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    await this.productModel.findByIdAndDelete(id).exec();\n    return {\n      message: null,\n      status: 'success',\n      data: id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCategoryDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/update-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/update-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/dto/api-response.interface.ts\n            \n            interface\n            ApiResponseInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/dto/api-response.interface.ts\n            \n            type alias\n            Status\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/mappers/category.mapper.ts\n            \n            function\n            mapCategoryToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/mappers/product.mapper.ts\n            \n            function\n            mapProductToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-response.dto.ts\n            \n            class\n            CategoryResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-tree-response.dto.ts\n            \n            interface\n            CategoryTreeResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            type alias\n            CategoryDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/products/dto/responses/product-response.dto.ts\n            \n            class\n            ProductResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/products/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            type alias\n            ProductDocument\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/mongoose : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            mongoose : ^8.12.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            mapCategoryToResponseDto   (src/.../category.mapper.ts)\n                        \n                        \n                            mapProductToResponseDto   (src/.../product.mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/mappers/category.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapCategoryToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapCategoryToResponseDto(category: CategoryDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CategoryResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/mappers/product.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapProductToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapProductToResponseDto(product: ProductDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            ProductDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ProductResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n    \n  \n\n\n\n\n\n\nDescription\nThis project is a Product & Inventory Management Microservice built with NestJS, MongoDB (via Mongoose), and RabbitMQ. It provides  microservice event patterns to handle:\n\nProduct CRUD operations\nCategory management\nInventory tracking and stock updates\n\nThe microservice leverages NestJS's modular architecture to separate concerns into distinct modules (e.g., products and categories) and integrates with RabbitMQ for asynchronous messaging.\nProject Setup\nInstallation\n\nClone the repository:\nExample :git clone git@github.com:Algos70/micro-services.git\ncd backend-services/product-and-inventory\n\nCompile and Run the Project\nProduction Mode\nExample :docker compose up --buildCompodoc Documentation\nThis project uses Compodoc to automatically generate project documentation.\nGenerating Documentation\n\nInstall dependencies\nExample :npm install\nGenerate and run the documentation:\nExample :npx compodoc -p tsconfig.json -s\n\nOpen your browser and navigate to http://localhost:8080 (or the URL provided by Compodoc) to view your project's documentation.\nResources\n\nNestJS Documentation\nMongoDB Documentation\nRabbitMQ Documentation\nCompodoc Documentation\n\nLicense\nThis project is licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                        \n                            Status   (src/.../api-response.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/modules/products/schemas/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/common/dto/api-response.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                        \"success\" | \"error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/modules/products/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

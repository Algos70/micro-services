var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.019,1,1.697]],["body/classes/AllExceptionsFilter.html",[0,0.018,1,2.277,2,1.006,3,0.425,4,0.371,5,0.371,6,2.478,7,4.094,8,4.66,9,0.371,10,2.277,11,4.66,12,4.094,13,3.557,14,4.66,15,5.006,16,0.748,17,3.001,18,1.498,19,0.038,20,0.606,21,0.425,22,1.498,23,3.001,24,1.498,25,4.66,26,1.248,27,1.109,28,2.478,29,1.498,30,2.043,31,3.001,32,2.133,33,3.001,34,0.425,35,2.277,36,5.407,37,3.001,38,3.456,39,0.827,40,4.094,41,3.001,42,3.001,43,1.512,44,3.001,45,3.001,46,2.909,47,3.001,48,3.001,49,1.498,50,1.875,51,1.669,52,3.001,53,0.025,54,0.025]],["title/interfaces/ApiResponseInterface.html",[30,1.523,55,1.697]],["body/interfaces/ApiResponseInterface.html",[3,0.527,4,0.46,5,0.46,9,0.46,19,0.038,21,0.771,30,2.355,34,0.668,38,3.402,39,1.047,43,2.12,46,2.646,49,2.945,50,3.402,53,0.029,54,0.029,55,2.071,56,2.646,57,2.646,58,2.646,59,1.3,60,5.18,61,2.326]],["title/modules/AppModule.html",[62,1.373,63,1.906]],["body/modules/AppModule.html",[0,0.02,3,0.453,4,0.396,5,0.396,19,0.039,26,1.335,27,1.183,34,0.453,53,0.026,54,0.026,62,2.168,63,3.571,64,1.598,65,1.598,66,2,67,2,68,1.598,69,2.672,70,2,71,2.643,72,2.643,73,2.75,74,3.064,75,2.672,76,2,77,1.781,78,3.202,79,3.039,80,2.275,81,1.304,82,3.976,83,1.598,84,3.202,85,3.202,86,3.202,87,3.202,88,3.202,89,3.202,90,3.202,91,3.202,92,3.202,93,3.202,94,3.202,95,3.202,96,3.202,97,3.202,98,1.598]],["title/classes/Category.html",[0,0.019,99,0.928]],["body/classes/Category.html",[0,0.021,2,1.123,3,0.475,4,0.414,5,0.414,9,0.414,16,1.099,19,0.038,20,0.995,21,0.741,26,1.099,34,0.698,35,1.864,39,0.891,43,1.819,53,0.027,54,0.027,59,1.215,81,1.365,83,2.2,99,1.697,100,2.094,101,4.066,102,2.754,103,2.767,104,4.066,105,3.352,106,3.132,107,2.767,108,3.639,109,3.639,110,3.639,111,3.352,112,4.066,113,2.754,114,2.767,115,3.132,116,2.094,117,2.767,118,2.767,119,2.767,120,2.094,121,2.767]],["title/controllers/CategoryController.html",[122,1.697,123,1.906]],["body/controllers/CategoryController.html",[0,0.013,1,1.195,3,0.304,4,0.266,5,0.266,9,0.266,10,1.792,16,1.284,18,2.296,19,0.038,20,0.93,21,0.652,22,2.296,24,2.571,26,1.204,27,0.794,29,1.072,34,0.304,39,1.065,51,2.865,53,0.02,54,0.02,98,1.072,99,1.632,102,3.219,122,1.792,123,2.013,124,1.774,125,1.608,126,2.289,127,3.545,128,3.545,129,2.66,130,3.545,131,2.66,132,2.013,133,1.774,134,2.411,135,2.66,136,2.149,137,1.527,138,2.66,139,2.149,140,1.982,141,4.43,142,3.545,143,2.149,144,3.222,145,2.149,146,1.774,147,2.66,148,2.149,149,2.013,150,2.149,151,1.774,152,2.66,153,2.149,154,1.774,155,2.686,156,2.66,157,2.149,158,1.774,159,1.774,160,1.774,161,1.74,162,1.774,163,1.342,164,2.289,165,1.342,166,1.774,167,1.774,168,1.774,169,1.342,170,1.774,171,2.149,172,1.774,173,2.149,174,2.149,175,2.149,176,2.149,177,2.149,178,2.149,179,2.149,180,2.149,181,2.149,182,2.149]],["title/modules/CategoryModule.html",[62,1.373,73,1.523]],["body/modules/CategoryModule.html",[0,0.022,3,0.496,4,0.433,5,0.433,19,0.038,20,0.708,26,1.375,27,1.294,34,0.496,53,0.028,54,0.028,62,2.265,64,1.748,65,1.748,66,2.188,67,2.188,68,1.748,69,3.144,70,2.188,73,2.819,75,2.834,76,2.188,77,1.948,79,2.489,80,2.489,81,1.427,98,2.264,99,1.065,113,2.188,120,2.834,123,3.144,161,2.543,162,2.892,183,2.892,184,2.892,185,3.503,186,3.503,187,2.892,188,2.892,189,2.892]],["title/classes/CategoryResponseDto.html",[0,0.019,190,1.523]],["body/classes/CategoryResponseDto.html",[0,0.024,2,1.306,3,0.552,4,0.482,5,0.482,9,0.482,16,1.318,19,0.037,20,1.069,21,0.749,34,0.552,39,1.173,43,1.793,53,0.03,54,0.03,59,1.338,140,1.953,190,2.423,191,3.933,192,2.434,193,4.366,194,3.217,195,3.217,196,3.217]],["title/injectables/CategoryService.html",[161,1.373,197,1.697]],["body/injectables/CategoryService.html",[0,0.007,3,0.16,4,0.14,5,0.14,9,0.14,10,1.071,13,0.805,16,1.055,18,1.804,19,0.039,20,0.936,21,0.512,22,1.804,24,2.026,26,1.125,27,0.418,29,0.565,30,0.565,32,0.805,34,0.16,35,2.974,38,2.739,39,0.856,43,1.99,49,2.188,50,2.739,51,2.438,53,0.012,54,0.012,61,2.739,81,0.461,83,0.961,99,1.408,101,3.352,125,1.254,126,1.368,127,2.448,128,2.448,129,2.075,130,2.448,131,2.075,132,1.57,133,0.935,134,1.804,137,1.368,140,1.564,142,2.744,146,0.935,147,1.59,149,0.707,151,0.935,154,0.935,155,2.01,161,0.867,163,0.707,164,1.368,165,0.707,169,0.707,187,0.935,189,0.935,190,0.565,197,1.071,198,0.805,199,0.935,200,4.447,201,1.59,202,1.132,203,2.448,204,1.132,205,1.926,206,1.132,207,4.111,208,1.132,209,1.132,210,1.132,211,1.132,212,1.132,213,1.132,214,1.132,215,0.935,216,0.935,217,0.805,218,1.132,219,1.926,220,1.368,221,0.707,222,1.132,223,0.935,224,4.111,225,3.857,226,2.361,227,2.513,228,3.352,229,3.352,230,3.115,231,2.984,232,1.926,233,1.926,234,1.926,235,2.448,236,1.926,237,2.965,238,1.926,239,1.926,240,1.132,241,3.982,242,1.926,243,1.132,244,1.132,245,1.132,246,2.513,247,1.926,248,1.132,249,1.926,250,1.132,251,1.132,252,1.132,253,2.448,254,1.132,255,1.132,256,1.132,257,1.132,258,1.59,259,1.132,260,1.132,261,1.59,262,1.132,263,1.132,264,1.132,265,1.132,266,1.132,267,0.935,268,1.132,269,1.132,270,1.132,271,1.132,272,1.132,273,1.132,274,1.132,275,1.132,276,1.926,277,1.132,278,1.132,279,1.132,280,1.926,281,1.132,282,1.132,283,1.132,284,1.132,285,0.935,286,1.132]],["title/interfaces/CategoryTreeResponseDto.html",[55,1.697,221,1.906]],["body/interfaces/CategoryTreeResponseDto.html",[3,0.552,4,0.482,5,0.482,9,0.482,19,0.037,20,1.119,21,0.749,26,0.971,34,0.552,39,1.173,53,0.03,54,0.03,55,2.167,56,2.769,59,1.338,99,1.185,140,2.045,149,2.434,190,2.762,191,2.769,192,2.434,220,2.769,221,3.033,285,4.57]],["title/classes/CreateCategoryDto.html",[0,0.019,134,1.523]],["body/classes/CreateCategoryDto.html",[0,0.025,2,1.381,3,0.584,4,0.509,5,0.509,9,0.509,16,1.253,19,0.036,20,1.096,21,0.712,34,0.584,39,1.141,53,0.031,54,0.031,59,1.385,134,2.508,193,4.476,287,4.476,288,2.928,289,4.121,290,4.121]],["title/classes/CreateProductDto.html",[0,0.019,291,1.523]],["body/classes/CreateProductDto.html",[0,0.021,2,1.17,3,0.494,4,0.432,5,0.432,9,0.432,16,1.407,19,0.037,20,1.015,21,0.799,34,0.494,39,1.177,43,1.672,53,0.028,54,0.028,59,1.248,291,2.259,292,4.743,293,2.481,294,3.139,295,3.57,296,3.57,297,2.794,298,3.57,299,3.491,300,3.491,301,3.491,302,2.956,303,3.491,304,3.491,305,2.882]],["title/classes/Product.html",[0,0.019,306,1.373]],["body/classes/Product.html",[0,0.017,2,0.913,3,0.386,4,0.337,5,0.337,9,0.337,16,1.308,19,0.038,20,0.895,21,0.779,26,1.104,34,0.627,35,1.515,39,1.06,43,1.414,53,0.024,54,0.024,59,1.055,81,1.11,83,1.911,99,1.538,102,3.277,103,3.964,104,4.729,106,2.721,107,2.249,108,2.249,109,3.161,112,4.541,113,2.392,114,2.249,115,2.721,117,2.249,118,4.331,119,2.249,294,2.765,295,3.146,296,3.146,297,2.462,298,3.146,302,2.67,306,1.724,307,1.702,308,2.725,309,2.725,310,2.725,311,2.725,312,2.725,313,2.725,314,2.725,315,1.702,316,1.702,317,2.249]],["title/classes/ProductResponseDto.html",[0,0.019,318,1.697]],["body/classes/ProductResponseDto.html",[0,0.021,2,1.131,3,0.478,4,0.417,5,0.417,9,0.417,16,1.421,19,0.037,20,0.999,21,0.807,34,0.478,39,1.193,43,1.635,53,0.027,54,0.027,59,1.22,140,1.825,192,2.108,194,2.785,195,2.785,196,2.785,294,3.087,295,3.512,296,3.512,297,2.748,298,3.512,302,2.918,318,2.462,319,4.773,320,3.374,321,3.374,322,3.374,323,3.374]],["title/controllers/ProductsController.html",[122,1.697,324,1.906]],["body/controllers/ProductsController.html",[0,0.012,1,1.086,3,0.276,4,0.241,5,0.241,9,0.241,10,1.666,16,1.279,18,2.496,19,0.038,20,1.092,21,0.708,22,2.496,24,2.559,26,1.161,27,0.721,29,0.974,34,0.276,39,1.154,51,2.852,53,0.018,54,0.018,98,0.974,99,1.243,102,3.204,122,1.666,125,1.495,132,1.872,135,2.473,138,2.473,140,1.847,141,4.322,152,2.473,156,3.376,158,1.612,159,1.612,160,1.612,163,1.22,165,1.22,166,1.612,167,1.612,168,1.612,169,1.22,170,1.612,172,1.612,226,2.129,291,2.323,297,2.781,302,2.027,306,2.251,324,1.872,325,1.612,326,3.376,327,2.473,328,2.473,329,2.996,330,2.996,331,2.473,332,1.612,333,1.952,334,2.473,335,1.952,336,1.952,337,1.952,338,1.952,339,1.952,340,1.612,341,1.952,342,1.952,343,1.952,344,1.952,345,1.952,346,1.612,347,2.589,348,1.952,349,1.612,350,1.952,351,1.819,352,1.612,353,2.129,354,1.952,355,1.952,356,1.952,357,1.952,358,1.952,359,1.952,360,1.952,361,1.952,362,1.952,363,1.952,364,1.952,365,1.952,366,1.952,367,1.952,368,1.952]],["title/modules/ProductsModule.html",[62,1.373,74,1.697]],["body/modules/ProductsModule.html",[0,0.021,3,0.475,4,0.414,5,0.414,19,0.038,20,0.677,26,1.391,27,1.238,34,0.475,53,0.027,54,0.027,62,2.217,64,1.672,65,1.672,66,2.094,67,2.094,68,1.672,69,3.077,70,2.094,73,2.785,74,3.211,75,2.754,76,2.094,77,1.864,79,3.132,80,2.381,81,1.365,98,2.2,113,2.094,188,2.767,306,1.509,316,2.754,324,3.077,351,2.785,352,2.767,369,2.767,370,2.767,371,3.352,372,3.352,373,3.352,374,2.767,375,3.352,376,2.767]],["title/injectables/ProductsService.html",[197,1.697,351,1.523]],["body/injectables/ProductsService.html",[0,0.007,3,0.16,4,0.14,5,0.14,9,0.14,10,1.07,13,0.804,16,1.125,18,2.187,19,0.039,20,0.912,21,0.621,22,2.187,24,2.187,26,1.125,27,0.418,29,0.564,30,0.564,32,0.804,34,0.16,35,2.9,38,2.535,39,1.054,43,1.926,49,2.025,50,2.535,51,2.353,53,0.012,54,0.012,61,2.737,81,0.461,83,0.96,99,0.585,106,0.804,125,1.253,126,1.367,132,1.568,137,0.804,140,1.811,161,0.509,163,0.707,165,0.707,169,0.707,197,1.07,198,0.804,200,4.502,201,1.588,203,2.446,207,4.165,215,0.934,216,0.934,220,0.804,223,0.934,224,3.981,226,1.367,228,3.182,229,3.35,230,3.114,231,2.073,235,2.446,241,3.821,261,0.934,267,3.35,291,1.803,294,0.707,297,1.648,302,1.396,306,2.031,318,0.629,326,2.446,327,2.073,328,2.073,331,2.073,332,0.934,334,2.073,340,1.588,346,0.934,347,2.009,349,0.934,351,0.96,353,1.367,374,0.934,376,0.934,377,0.934,378,1.924,379,1.924,380,1.131,381,1.131,382,1.924,383,1.131,384,1.131,385,1.924,386,1.131,387,1.131,388,1.131,389,1.131,390,1.131,391,1.131,392,1.131,393,1.924,394,1.131,395,1.924,396,1.131,397,1.131,398,1.131,399,1.131,400,1.131,401,0.804,402,1.131,403,1.131,404,1.924,405,1.924,406,1.131,407,1.924,408,1.924,409,1.924,410,1.924,411,1.924,412,1.131,413,1.131,414,1.131,415,1.924,416,1.131,417,3.322,418,2.511,419,1.131,420,1.924,421,1.924,422,1.131,423,1.924,424,1.131,425,1.924,426,1.924,427,1.924,428,1.131,429,1.131,430,2.742,431,1.131,432,2.511,433,2.963,434,1.131,435,1.131,436,1.131,437,1.131,438,2.511,439,1.131,440,1.131,441,1.131,442,1.131]],["title/classes/UpdateCategoryDto.html",[0,0.019,155,1.697]],["body/classes/UpdateCategoryDto.html",[0,0.025,2,1.348,3,0.57,4,0.497,5,0.497,9,0.497,16,1.002,19,0.037,21,0.57,26,1.234,34,0.57,39,1,53,0.03,54,0.03,59,1.364,125,2.007,134,2.007,140,1.981,155,2.753,164,2.858,288,2.858,443,4.087,444,4.087,445,4.951,446,4.022,447,3.32,448,2.858,449,2.858]],["title/classes/UpdateProductDto.html",[0,0.019,347,1.697]],["body/classes/UpdateProductDto.html",[0,0.025,2,1.348,3,0.57,4,0.497,5,0.497,9,0.497,16,1.002,19,0.037,21,0.57,26,1.234,34,0.57,39,1,53,0.03,54,0.03,59,1.364,125,2.007,140,1.981,291,2.007,293,2.858,305,3.32,347,2.753,353,2.858,444,4.087,447,3.32,448,2.858,449,2.858,450,4.087,451,4.951]],["title/coverage.html",[452,2.942]],["body/coverage.html",[0,0.034,1,1.515,5,0.337,6,2.249,19,0.038,21,0.68,30,1.36,49,1.36,53,0.024,54,0.024,55,2.129,57,2.721,58,2.721,68,1.36,99,0.829,100,2.765,116,1.702,120,1.702,122,2.129,123,1.702,124,2.249,134,1.36,149,1.702,155,1.515,161,1.226,190,1.36,191,2.721,192,2.765,197,2.129,199,2.249,217,1.936,221,1.702,230,1.936,258,5.018,287,2.249,288,2.721,291,1.36,292,2.249,293,2.721,306,1.226,307,2.765,315,1.702,316,1.702,318,1.515,319,2.249,324,1.702,325,2.249,347,1.515,351,1.36,377,2.249,401,1.936,443,2.249,450,2.249,452,1.936,453,2.249,454,2.725,455,2.725,456,4.427,457,4.427,458,5.502,459,4.427,460,2.249,461,4.427,462,2.249,463,2.249,464,2.725,465,3.829,466,3.829,467,3.829,468,3.829,469,2.725,470,2.725,471,2.725,472,2.725]],["title/dependencies.html",[65,1.828,473,2.113]],["body/dependencies.html",[0,0.03,19,0.038,27,1.451,28,3.242,29,1.96,53,0.03,54,0.03,65,1.96,81,1.6,82,3.242,83,1.96,448,2.791,449,2.791,474,5.551,475,3.928,476,3.928,477,3.928,478,3.928,479,3.928,480,3.928,481,3.928,482,3.928,483,3.928,484,3.928,485,3.928,486,3.928,487,3.928,488,3.928,489,3.928,490,3.928,491,3.928,492,3.928]],["title/miscellaneous/functions.html",[493,1.277,494,3.024]],["body/miscellaneous/functions.html",[9,0.499,18,2.477,19,0.036,20,1.003,21,0.703,22,2.477,24,2.477,53,0.031,54,0.031,68,2.681,99,1.228,116,3.1,190,2.015,217,3.526,253,3.333,306,1.817,315,3.1,318,2.245,401,3.526,430,3.333,460,3.333,462,3.333,463,3.333,493,2.015,494,3.333,495,4.038,496,4.038,497,4.038]],["title/index.html",[9,0.316,498,2.56,499,2.56]],["body/index.html",[4,0.277,19,0.036,53,0.02,54,0.02,77,2.728,452,1.591,453,2.743,500,2.239,501,2.239,502,3.962,503,3.323,504,2.239,505,2.239,506,2.239,507,2.239,508,3.323,509,1.849,510,3.962,511,2.239,512,2.239,513,2.239,514,4.384,515,2.239,516,4.384,517,5.216,518,2.239,519,5.078,520,2.239,521,2.239,522,2.239,523,3.323,524,2.239,525,3.323,526,2.239,527,3.962,528,2.239,529,3.323,530,2.239,531,2.239,532,2.239,533,2.239,534,2.239,535,4.384,536,5.216,537,4.906,538,2.239,539,3.323,540,2.239,541,2.239,542,2.239,543,2.239,544,2.239,545,4.906,546,3.323,547,4.384,548,2.239,549,3.323,550,2.239,551,2.239,552,3.323,553,4.906,554,4.384,555,2.239,556,3.323,557,2.239,558,2.239,559,2.239,560,2.239,561,4.384,562,2.239,563,2.239,564,2.239,565,2.239,566,3.323,567,2.239,568,2.239,569,2.239,570,2.239,571,2.239,572,3.323,573,2.239,574,2.239,575,2.239,576,3.323,577,2.239,578,2.239,579,3.619,580,3.323,581,2.239,582,2.239,583,2.239,584,2.239,585,2.239,586,2.239,587,2.239,588,2.239,589,3.323,590,2.239,591,2.239,592,2.239,593,2.239,594,3.962,595,2.239,596,2.239,597,2.239,598,2.239,599,2.239,600,2.239,601,3.323,602,2.239,603,2.239,604,2.239,605,2.239,606,2.239,607,3.323,608,2.239,609,2.239,610,2.239,611,3.323,612,3.323,613,2.239,614,2.239,615,2.239,616,2.239,617,2.239,618,2.239,619,2.239,620,2.239,621,2.239,622,2.239,623,2.239,624,1.849,625,2.239,626,2.239,627,2.239,628,2.239,629,2.239,630,2.239,631,1.849]],["title/modules.html",[64,2.066]],["body/modules.html",[19,0.032,53,0.032,54,0.032,63,2.791,64,2.23,73,2.23,74,2.485,579,4.634,632,5.614,633,5.614,634,5.614]],["title/overview.html",[635,3.418]],["body/overview.html",[2,1.262,19,0.036,53,0.029,54,0.029,56,2.676,62,1.695,63,3.596,64,1.879,65,1.879,66,2.352,67,2.352,68,1.879,69,2.352,70,2.352,71,3.109,72,3.109,73,2.873,74,3.251,75,2.968,76,2.352,77,2.094,98,1.879,161,2.344,183,3.109,184,3.109,198,2.676,351,2.598,369,3.109,370,3.109,635,3.109,636,3.766,637,5.207,638,3.766]],["title/properties.html",[59,1.01,473,2.113]],["body/properties.html",[19,0.037,53,0.033,54,0.033,59,1.259,509,3.773,624,3.773,631,3.773,639,4.57,640,4.57,641,4.57]],["title/miscellaneous/typealiases.html",[493,1.277,642,3.664]],["body/miscellaneous/typealiases.html",[9,0.536,19,0.034,21,0.614,46,3.079,49,2.585,53,0.032,54,0.032,57,3.079,58,3.681,61,2.707,100,2.707,115,3.681,116,3.236,307,2.707,315,3.236,493,2.163,643,4.334,644,3.577,645,3.577,646,4.334]],["title/miscellaneous/variables.html",[493,1.277,647,3.024]],["body/miscellaneous/variables.html",[9,0.545,19,0.036,53,0.032,54,0.032,100,2.755,110,4.321,120,3.27,121,3.64,307,2.755,316,3.27,317,3.64,493,2.2,644,3.64,645,3.64,647,3.64,648,5.235]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":258,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":640,"title":{},"body":{"properties.html":{}}}],["0.10.5",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":637,"title":{},"body":{"overview.html":{}}}],["3",{"_index":636,"title":{},"body":{"overview.html":{}}}],["4.1.14",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["8.12.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":638,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":235,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["alias",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["allowing",{"_index":567,"title":{},"body":{"index.html":{}}}],["already",{"_index":232,"title":{},"body":{"injectables/CategoryService.html":{}}}],["amazing",{"_index":617,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["any).message",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["apiresponseinterface",{"_index":30,"title":{"interfaces/ApiResponseInterface.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["application",{"_index":537,"title":{},"body":{"index.html":{}}}],["applications",{"_index":508,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["async",{"_index":200,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["author",{"_index":624,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":224,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["aws",{"_index":556,"title":{},"body":{"index.html":{}}}],["backers",{"_index":618,"title":{},"body":{"index.html":{}}}],["based",{"_index":551,"title":{},"body":{"index.html":{}}}],["board",{"_index":610,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":634,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":632,"title":{},"body":{"modules.html":{}}}],["building",{"_index":503,"title":{},"body":{"index.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(rpcexception",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":142,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["categories.foreach((category",{"_index":275,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.length",{"_index":272,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories.map((category",{"_index":269,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category",{"_index":99,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["category.controller",{"_index":186,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":164,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":288,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":289,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:3",{"_index":290,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":446,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["category.name",{"_index":189,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["category.parentcategory",{"_index":250,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.parentid",{"_index":276,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.save",{"_index":252,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.service",{"_index":162,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":375,"title":{},"body":{"modules/ProductsModule.html":{}}}],["category/category.service",{"_index":399,"title":{},"body":{"injectables/ProductsService.html":{}}}],["category/schemas/category.schema",{"_index":314,"title":{},"body":{"classes/Product.html":{}}}],["category_id",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["categorycontroller",{"_index":123,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorydocument",{"_index":116,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["categorymodel",{"_index":205,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":73,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryresponse",{"_index":404,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponse.status",{"_index":407,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryresponsedto",{"_index":190,"title":{"classes/CategoryResponseDto.html":{}},"body":{"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["categoryschema",{"_index":120,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":161,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice.prototype.findonebyid",{"_index":405,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryservice.prototype.findonebyid(id",{"_index":440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categorytreeresponsedto",{"_index":221,"title":{"interfaces/CategoryTreeResponseDto.html":{}},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["categorywithsamename",{"_index":247,"title":{},"body":{"injectables/CategoryService.html":{}}}],["channel",{"_index":582,"title":{},"body":{"index.html":{}}}],["check",{"_index":545,"title":{},"body":{"index.html":{}}}],["children",{"_index":285,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{}}}],["childrenmap",{"_index":273,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(category.parentid)!.push(category",{"_index":279,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.get(root.id",{"_index":286,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.has(category.parentid",{"_index":277,"title":{},"body":{"injectables/CategoryService.html":{}}}],["childrenmap.set(category.parentid",{"_index":278,"title":{},"body":{"injectables/CategoryService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clicks",{"_index":566,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":550,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":183,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":184,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":369,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":371,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":370,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["come",{"_index":573,"title":{},"body":{"index.html":{}}}],["common/dto/api",{"_index":216,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["common/filters/exception.filter",{"_index":166,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["common/mappers/category.mapper",{"_index":218,"title":{},"body":{"injectables/CategoryService.html":{}}}],["common/mappers/product.mapper",{"_index":402,"title":{},"body":{"injectables/ProductsService.html":{}}}],["connection",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection.on('connected",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnected",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnecting",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('open",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('reconnected",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('connected",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('disconnected",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('disconnecting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('open",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('reconnected",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["constructor",{"_index":201,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["constructor(categorymodel",{"_index":202,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(private",{"_index":168,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productmodel",{"_index":380,"title":{},"body":{"injectables/ProductsService.html":{}}}],["controller",{"_index":122,"title":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controllers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["courses",{"_index":588,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":452,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":125,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["create(@payload",{"_index":170,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["create(createcategorydto",{"_index":133,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["create(createproductdto",{"_index":332,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createcategorydto",{"_index":134,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto.name",{"_index":227,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createcategorydto.parentid",{"_index":234,"title":{},"body":{"injectables/CategoryService.html":{}}}],["created",{"_index":243,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createproductdto",{"_index":291,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto.category_id",{"_index":406,"title":{},"body":{"injectables/ProductsService.html":{}}}],["data",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{}}}],["deeper",{"_index":584,"title":{},"body":{"index.html":{}}}],["default",{"_index":110,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["delete",{"_index":126,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["delete(@payload",{"_index":174,"title":{},"body":{"controllers/CategoryController.html":{}}}],["delete(id",{"_index":137,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":535,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":555,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":546,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":565,"title":{},"body":{"index.html":{}}}],["description",{"_index":509,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":520,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":596,"title":{},"body":{"index.html":{}}}],["discord",{"_index":581,"title":{},"body":{"index.html":{}}}],["dive",{"_index":583,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":453,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/api",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["dto/requests/create",{"_index":163,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/requests/update",{"_index":165,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/responses/category",{"_index":219,"title":{},"body":{"injectables/CategoryService.html":{}}}],["dto/responses/product",{"_index":400,"title":{},"body":{"injectables/ProductsService.html":{}}}],["e2e",{"_index":530,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":504,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":543,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":541,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":600,"title":{},"body":{"index.html":{}}}],["error",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"miscellaneous/typealiases.html":{}}}],["errorresponse",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errorresponse.message",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["escaped",{"_index":436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex",{"_index":378,"title":{},"body":{"injectables/ProductsService.html":{}}}],["escaperegex(text",{"_index":385,"title":{},"body":{"injectables/ProductsService.html":{}}}],["eventpattern",{"_index":159,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('create",{"_index":135,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('find",{"_index":141,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('remove",{"_index":138,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["eventpattern('update",{"_index":156,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["example",{"_index":516,"title":{},"body":{"index.html":{}}}],["exception",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.geterror",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":228,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["exist",{"_index":237,"title":{},"body":{"injectables/CategoryService.html":{}}}],["exists",{"_index":233,"title":{},"body":{"injectables/CategoryService.html":{}}}],["experience",{"_index":586,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["express",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":444,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["fast",{"_index":559,"title":{},"body":{"index.html":{}}}],["features",{"_index":569,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":270,"title":{},"body":{"injectables/CategoryService.html":{}}}],["few",{"_index":561,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["filter((category",{"_index":281,"title":{},"body":{"injectables/CategoryService.html":{}}}],["find",{"_index":261,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["findall",{"_index":326,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findallcategories",{"_index":127,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallparentcategories",{"_index":128,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid",{"_index":129,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findallsubcategoriesbyid(@payload",{"_index":176,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findallsubcategoriesbyid(id",{"_index":146,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findbycategory",{"_index":327,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbycategory(@payload",{"_index":367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(category",{"_index":336,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbycategory(id",{"_index":389,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(updateproductdto.id",{"_index":416,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyname",{"_index":328,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyname(@payload",{"_index":365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(name",{"_index":338,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findbyname(partialname",{"_index":391,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findcategorytree",{"_index":130,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findone",{"_index":226,"title":{},"body":{"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone(@payload",{"_index":356,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findone(id",{"_index":340,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findonebyid",{"_index":131,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findonebyid(@payload",{"_index":179,"title":{},"body":{"controllers/CategoryController.html":{}}}],["findonebyid(id",{"_index":151,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["findstock",{"_index":329,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(@payload",{"_index":361,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findstock(id",{"_index":342,"title":{},"body":{"controllers/ProductsController.html":{}}}],["focus",{"_index":568,"title":{},"body":{"index.html":{}}}],["follow",{"_index":604,"title":{},"body":{"index.html":{}}}],["formattederror",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["found",{"_index":267,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["framework",{"_index":502,"title":{},"body":{"index.html":{}}}],["full",{"_index":599,"title":{},"body":{"index.html":{}}}],["function",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":494,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":564,"title":{},"body":{"index.html":{}}}],["getstock",{"_index":379,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getstock(id",{"_index":395,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":498,"title":{"index.html":{}},"body":{}}],["graph",{"_index":591,"title":{},"body":{"index.html":{}}}],["grow",{"_index":614,"title":{},"body":{"index.html":{}}}],["hands",{"_index":585,"title":{},"body":{"index.html":{}}}],["handy",{"_index":574,"title":{},"body":{"index.html":{}}}],["help",{"_index":589,"title":{},"body":{"index.html":{}}}],["here",{"_index":622,"title":{},"body":{"index.html":{}}}],["host",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":628,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":115,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":140,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["information",{"_index":548,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":571,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":197,"title":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectmodel",{"_index":215,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["injectmodel(category.name",{"_index":222,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectmodel(product.name",{"_index":403,"title":{},"body":{"injectables/ProductsService.html":{}}}],["install",{"_index":563,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":518,"title":{},"body":{"index.html":{}}}],["interact",{"_index":592,"title":{},"body":{"index.html":{}}}],["interface",{"_index":55,"title":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":56,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"interfaces/CategoryTreeResponseDto.html":{},"overview.html":{}}}],["job",{"_index":607,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":609,"title":{},"body":{"index.html":{}}}],["join",{"_index":620,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":625,"title":{},"body":{"index.html":{}}}],["key",{"_index":538,"title":{},"body":{"index.html":{}}}],["later",{"_index":411,"title":{},"body":{"injectables/ProductsService.html":{}}}],["learn",{"_index":577,"title":{},"body":{"index.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["license",{"_index":631,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":612,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":606,"title":{},"body":{"index.html":{}}}],["looking",{"_index":549,"title":{},"body":{"index.html":{}}}],["loop",{"_index":602,"title":{},"body":{"index.html":{}}}],["makes",{"_index":557,"title":{},"body":{"index.html":{}}}],["manager",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["managing",{"_index":570,"title":{},"body":{"index.html":{}}}],["map",{"_index":274,"title":{},"body":{"injectables/CategoryService.html":{}}}],["map((root",{"_index":282,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto",{"_index":217,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(category",{"_index":253,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/functions.html":{}}}],["mapcategorytoresponsedto(newcategory",{"_index":242,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapcategorytoresponsedto(subcategory",{"_index":263,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mapproducttoresponsedto",{"_index":401,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapproducttoresponsedto(newproduct",{"_index":414,"title":{},"body":{"injectables/ProductsService.html":{}}}],["mapproducttoresponsedto(product",{"_index":430,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":553,"title":{},"body":{"index.html":{}}}],["message",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["metadata",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["miscellaneous",{"_index":493,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":611,"title":{},"body":{"index.html":{}}}],["mode",{"_index":523,"title":{},"body":{"index.html":{}}}],["model",{"_index":203,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/category/category.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":119,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["mongoose.types.objectid",{"_index":106,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{}}}],["mongoose.types.objectid(parentcategory._id",{"_index":251,"title":{},"body":{"injectables/CategoryService.html":{}}}],["mongoosemodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":188,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ProductsModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost/nest",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":547,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":626,"title":{},"body":{"index.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":597,"title":{},"body":{"index.html":{}}}],["nest",{"_index":510,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":630,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":536,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":448,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":230,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newcategory",{"_index":238,"title":{},"body":{"injectables/CategoryService.html":{}}}],["newproduct",{"_index":412,"title":{},"body":{"injectables/ProductsService.html":{}}}],["node.js",{"_index":501,"title":{},"body":{"index.html":{}}}],["npm",{"_index":517,"title":{},"body":{"index.html":{}}}],["null",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{}}}],["number",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["object",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["observable",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["occurred",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["of(formattederror",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["offer",{"_index":608,"title":{},"body":{"index.html":{}}}],["official",{"_index":554,"title":{},"body":{"index.html":{}}}],["onconnectioncreate",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["one",{"_index":152,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["open",{"_index":613,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":635,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":473,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":144,"title":{},"body":{"controllers/CategoryController.html":{}}}],["parentcategories",{"_index":264,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategories.map((category",{"_index":265,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentcategory",{"_index":101,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{}}}],["parentcategory._id",{"_index":240,"title":{},"body":{"injectables/CategoryService.html":{}}}],["parentid",{"_index":193,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/CreateCategoryDto.html":{}}}],["part",{"_index":598,"title":{},"body":{"index.html":{}}}],["partialname",{"_index":393,"title":{},"body":{"injectables/ProductsService.html":{}}}],["partialtype",{"_index":447,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createcategorydto",{"_index":445,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":451,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["payload",{"_index":160,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["platform",{"_index":552,"title":{},"body":{"index.html":{}}}],["please",{"_index":580,"title":{},"body":{"index.html":{}}}],["possible",{"_index":544,"title":{},"body":{"index.html":{}}}],["price",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["private",{"_index":223,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":306,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["product.category_id",{"_index":419,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.dto",{"_index":353,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:2",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:3",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:4",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:6",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:7",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.image",{"_index":428,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.name",{"_index":376,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.price",{"_index":422,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.save",{"_index":429,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.stock",{"_index":426,"title":{},"body":{"injectables/ProductsService.html":{}}}],["product.vendor_id",{"_index":424,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productdocument",{"_index":315,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["production",{"_index":525,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":382,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productresponsedto",{"_index":318,"title":{"classes/ProductResponseDto.html":{}},"body":{"classes/ProductResponseDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["products",{"_index":334,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":373,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.map((product",{"_index":432,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service",{"_index":352,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productschema",{"_index":316,"title":{},"body":{"classes/Product.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":324,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":74,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":351,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":500,"title":{},"body":{"index.html":{}}}],["project",{"_index":514,"title":{},"body":{"index.html":{}}}],["promise",{"_index":207,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["prop",{"_index":112,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({required",{"_index":103,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["prop({type",{"_index":107,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["properties",{"_index":59,"title":{"properties.html":{}},"body":{"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"properties.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["questions",{"_index":578,"title":{},"body":{"index.html":{}}}],["read",{"_index":621,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":169,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["ready",{"_index":534,"title":{},"body":{"index.html":{}}}],["real",{"_index":593,"title":{},"body":{"index.html":{}}}],["ref",{"_index":109,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["reflect",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["regexp(escaped",{"_index":439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["remove",{"_index":330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(@payload",{"_index":359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(id",{"_index":344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["repository",{"_index":513,"title":{},"body":{"index.html":{}}}],["required",{"_index":118,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["requiring",{"_index":560,"title":{},"body":{"index.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["resources",{"_index":572,"title":{},"body":{"index.html":{}}}],["response",{"_index":254,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data",{"_index":256,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.data.length",{"_index":257,"title":{},"body":{"injectables/CategoryService.html":{}}}],["response.dto",{"_index":220,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"injectables/ProductsService.html":{}}}],["response.dto.ts",{"_index":192,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:2",{"_index":194,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:3",{"_index":195,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:4",{"_index":196,"title":{},"body":{"classes/CategoryResponseDto.html":{},"classes/ProductResponseDto.html":{}}}],["response.dto.ts:5",{"_index":322,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:6",{"_index":323,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:7",{"_index":320,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.dto.ts:8",{"_index":321,"title":{},"body":{"classes/ProductResponseDto.html":{}}}],["response.interface",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["response.interface.ts",{"_index":58,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["responsedto",{"_index":241,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["root.id",{"_index":283,"title":{},"body":{"injectables/CategoryService.html":{}}}],["root.name",{"_index":284,"title":{},"body":{"injectables/CategoryService.html":{}}}],["roots",{"_index":280,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('category",{"_index":231,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["rpcexception('parent",{"_index":236,"title":{},"body":{"injectables/CategoryService.html":{}}}],["rpcexception('product",{"_index":417,"title":{},"body":{"injectables/ProductsService.html":{}}}],["rpcexceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["run",{"_index":519,"title":{},"body":{"index.html":{}}}],["runs",{"_index":542,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["s]/g",{"_index":435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["same",{"_index":248,"title":{},"body":{"injectables/CategoryService.html":{}}}],["scalable",{"_index":505,"title":{},"body":{"index.html":{}}}],["schema",{"_index":113,"title":{},"body":{"classes/Category.html":{},"modules/CategoryModule.html":{},"classes/Product.html":{},"modules/ProductsModule.html":{}}}],["schemafactory",{"_index":114,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["schemafactory.createforclass(category",{"_index":121,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":317,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":187,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["schemas/product.schema",{"_index":374,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["server",{"_index":506,"title":{},"body":{"index.html":{}}}],["setup",{"_index":515,"title":{},"body":{"index.html":{}}}],["side",{"_index":507,"title":{},"body":{"index.html":{}}}],["simple",{"_index":562,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"modules/AppModule.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["sponsors",{"_index":616,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":646,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../category.mapper.ts",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category.schema.ts",{"_index":644,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.mapper.ts",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":645,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/dto/api",{"_index":57,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:8",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/mappers/category.mapper.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/mappers/product.mapper.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/category/category.controller.ts",{"_index":124,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/modules/category/category.controller.ts:14",{"_index":136,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:19",{"_index":157,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:24",{"_index":139,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:29",{"_index":148,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:34",{"_index":145,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:39",{"_index":153,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:44",{"_index":143,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.controller.ts:49",{"_index":150,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.module.ts",{"_index":185,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/modules/category/category.service.ts",{"_index":199,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/modules/category/category.service.ts:104",{"_index":208,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:117",{"_index":211,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:139",{"_index":210,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:14",{"_index":204,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:156",{"_index":213,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:173",{"_index":209,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:188",{"_index":212,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:19",{"_index":206,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/category.service.ts:64",{"_index":214,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/dto/requests/create",{"_index":287,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/requests/update",{"_index":443,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/category/dto/responses/category",{"_index":191,"title":{},"body":{"classes/CategoryResponseDto.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["src/modules/category/schemas/category.schema.ts",{"_index":100,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/category/schemas/category.schema.ts:16",{"_index":111,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/category/schemas/category.schema.ts:9",{"_index":105,"title":{},"body":{"classes/Category.html":{}}}],["src/modules/products/dto/requests/create",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/requests/update",{"_index":450,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/responses/product",{"_index":319,"title":{},"body":{"classes/ProductResponseDto.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts",{"_index":325,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:14",{"_index":333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:19",{"_index":335,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:24",{"_index":341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:34",{"_index":345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:39",{"_index":343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:44",{"_index":350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:49",{"_index":339,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:54",{"_index":337,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":372,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":377,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:108",{"_index":394,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:121",{"_index":386,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:125",{"_index":392,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:14",{"_index":381,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:143",{"_index":390,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:161",{"_index":396,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:173",{"_index":398,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:19",{"_index":383,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:193",{"_index":384,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:41",{"_index":397,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:96",{"_index":388,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/schemas/product.schema.ts",{"_index":307,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/modules/products/schemas/product.schema.ts:10",{"_index":310,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:12",{"_index":311,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:14",{"_index":312,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:16",{"_index":313,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:18",{"_index":309,"title":{},"body":{"classes/Product.html":{}}}],["src/modules/products/schemas/product.schema.ts:24",{"_index":308,"title":{},"body":{"classes/Product.html":{}}}],["start",{"_index":521,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":524,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":526,"title":{},"body":{"index.html":{}}}],["started",{"_index":499,"title":{"index.html":{}},"body":{}}],["starter",{"_index":512,"title":{},"body":{"index.html":{}}}],["statements",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":601,"title":{},"body":{"index.html":{}}}],["steps",{"_index":539,"title":{},"body":{"index.html":{}}}],["stock",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["straightforward",{"_index":558,"title":{},"body":{"index.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["subcategories",{"_index":147,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["subcategories.map((subcategory",{"_index":262,"title":{},"body":{"injectables/CategoryService.html":{}}}],["success",{"_index":61,"title":{},"body":{"interfaces/ApiResponseInterface.html":{},"injectables/CategoryService.html":{},"injectables/ProductsService.html":{},"miscellaneous/typealiases.html":{}}}],["successfully",{"_index":244,"title":{},"body":{"injectables/CategoryService.html":{}}}],["support",{"_index":579,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":633,"title":{},"body":{"modules.html":{}}}],["t",{"_index":60,"title":{},"body":{"interfaces/ApiResponseInterface.html":{}}}],["table",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":540,"title":{},"body":{"index.html":{}}}],["test",{"_index":529,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":532,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["tests",{"_index":527,"title":{},"body":{"index.html":{}}}],["text",{"_index":387,"title":{},"body":{"injectables/ProductsService.html":{}}}],["text.replace",{"_index":434,"title":{},"body":{"injectables/ProductsService.html":{}}}],["thanks",{"_index":615,"title":{},"body":{"index.html":{}}}],["this.categorymodel",{"_index":225,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.create",{"_index":239,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.find().exec",{"_index":268,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyid(id).exec",{"_index":266,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyidanddelete(id).exec",{"_index":259,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findone",{"_index":260,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.create(createcategorydto",{"_index":171,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.delete(id",{"_index":175,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallcategories",{"_index":181,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallparentcategories",{"_index":178,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findallsubcategoriesbyid(id",{"_index":177,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findcategorytree",{"_index":182,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findonebyid(id",{"_index":180,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.update(updatecategorydto",{"_index":173,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.escaperegex(partialname",{"_index":437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findallcategories()).data",{"_index":271,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.findallsubcategoriesbyid(id",{"_index":255,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.productmodel",{"_index":415,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.create(createproductdto",{"_index":413,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find",{"_index":441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.find().exec",{"_index":431,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findbyidanddelete(id).exec",{"_index":442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel.findone",{"_index":433,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":354,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.delete(id",{"_index":360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":355,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbycategory(category",{"_index":368,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyname(name",{"_index":366,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(id",{"_index":357,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getstock(id",{"_index":362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(updateproductdto",{"_index":358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updatestock(id",{"_index":364,"title":{},"body":{"controllers/ProductsController.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductsService.html":{}}}],["time",{"_index":594,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":117,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["todo",{"_index":408,"title":{},"body":{"injectables/ProductsService.html":{}}}],["touch",{"_index":623,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":149,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"coverage.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["twitter",{"_index":629,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/ApiResponseInterface.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CategoryResponseDto.html":{},"injectables/CategoryService.html":{},"interfaces/CategoryTreeResponseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":642,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["types",{"_index":449,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":511,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":108,"title":{},"body":{"classes/Category.html":{},"classes/Product.html":{}}}],["unit",{"_index":528,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["unlicensed",{"_index":641,"title":{},"body":{"properties.html":{}}}],["update",{"_index":132,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["update(@payload",{"_index":172,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["update(updatecategorydto",{"_index":154,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["update(updateproductdto",{"_index":346,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatecategorydto",{"_index":155,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto.id",{"_index":245,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.name",{"_index":246,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updatecategorydto.parentid",{"_index":249,"title":{},"body":{"injectables/CategoryService.html":{}}}],["updateproductdto",{"_index":347,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto.category_id",{"_index":418,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.image",{"_index":427,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.name",{"_index":420,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.price",{"_index":421,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.stock",{"_index":425,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto.vendor_id",{"_index":423,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updates",{"_index":603,"title":{},"body":{"index.html":{}}}],["updatestock",{"_index":331,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updatestock(@payload",{"_index":363,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updatestock(id",{"_index":349,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["usefilters",{"_index":158,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["usefilters(allexceptionsfilter",{"_index":167,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductsController.html":{}}}],["using",{"_index":595,"title":{},"body":{"index.html":{}}}],["validate",{"_index":409,"title":{},"body":{"injectables/ProductsService.html":{}}}],["validator",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":647,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":410,"title":{},"body":{"injectables/ProductsService.html":{}}}],["vendor_id",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/ProductResponseDto.html":{}}}],["version",{"_index":639,"title":{},"body":{"properties.html":{}}}],["video",{"_index":587,"title":{},"body":{"index.html":{}}}],["visit",{"_index":576,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":590,"title":{},"body":{"index.html":{}}}],["watch",{"_index":522,"title":{},"body":{"index.html":{}}}],["website",{"_index":627,"title":{},"body":{"index.html":{}}}],["working",{"_index":575,"title":{},"body":{"index.html":{}}}],["x",{"_index":605,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":619,"title":{},"body":{"index.html":{}}}],["you're",{"_index":533,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RpcExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RpcException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exception.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        RpcException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { Observable, of } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../dto/api-response.interface';\n\n@Catch(RpcException)\nexport class AllExceptionsFilter implements RpcExceptionFilter {\n  catch(exception: RpcException, host: ArgumentsHost): Observable {\n    const errorResponse = exception.getError();\n    let message: string = '';\n    if (typeof errorResponse === 'string') {\n      message = errorResponse;\n    } else if (\n      typeof errorResponse === 'object' &&\n      'message' in errorResponse &&\n      errorResponse.message !== null\n    ) {\n      message = (errorResponse as any).message;\n    } else {\n      message = 'An unknown error occurred';\n    }\n    const formattedError: ApiResponseInterface = {\n      status: 'error',\n      message: message,\n      data: null,\n    };\n    return of(formattedError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiResponseInterface.html":{"url":"interfaces/ApiResponseInterface.html","title":"interface - ApiResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/api-response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiResponseInterface {\n  status: Status;\n  message: string | null;\n  data: T | null;\n}\n\nexport type Status = 'success' | 'error';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Connection } from 'mongoose';\nimport { ProductsModule } from './modules/products/products.module';\nimport { CategoryModule } from './modules/category/category.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    CategoryModule,\n    MongooseModule.forRoot('mongodb://localhost/nest', {\n      onConnectionCreate: (connection: Connection) => {\n        connection.on('connected', () => console.log('connected'));\n        connection.on('open', () => console.log('open'));\n        connection.on('disconnected', () => console.log('disconnected'));\n        connection.on('reconnected', () => console.log('reconnected'));\n        connection.on('disconnecting', () => console.log('disconnecting'));\n      },\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/schemas/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parentCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/category/schemas/category.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CategoryDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Category {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    default: null,\n  })\n  parentCategory: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAllCategories\n                            \n                            \n                                    \n                                findAllParentCategories\n                            \n                            \n                                    \n                                findAllSubcategoriesById\n                            \n                            \n                                    \n                                findCategoryTree\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-parent-categories')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-subcategories-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-category-tree')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-category-by-id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/category/category.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @EventPattern('create-category')\n  create(@Payload() createCategoryDto: CreateCategoryDto) {\n    return this.categoryService.create(createCategoryDto);\n  }\n\n  @EventPattern('update-category')\n  update(@Payload() updateCategoryDto: UpdateCategoryDto) {\n    return this.categoryService.update(updateCategoryDto);\n  }\n\n  @EventPattern('remove-category')\n  delete(@Payload() id: string) {\n    return this.categoryService.delete(id);\n  }\n\n  @EventPattern('find-all-subcategories-by-id')\n  findAllSubcategoriesById(@Payload() id: string) {\n    return this.categoryService.findAllSubcategoriesById(id);\n  }\n\n  @EventPattern('find-all-parent-categories')\n  findAllParentCategories() {\n    return this.categoryService.findAllParentCategories();\n  }\n\n  @EventPattern('find-one-category-by-id')\n  findOneById(@Payload() id: string) {\n    return this.categoryService.findOneById(id);\n  }\n\n  @EventPattern('find-all-categories')\n  findAllCategories() {\n    return this.categoryService.findAllCategories();\n  }\n\n  @EventPattern('find-category-tree')\n  findCategoryTree() {\n    return this.categoryService.findCategoryTree();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category, CategorySchema } from './schemas/category.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.name, schema: CategorySchema },\n    ]),\n  ],\n  controllers: [CategoryController],\n  providers: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryResponseDto.html":{"url":"classes/CategoryResponseDto.html","title":"class - CategoryResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/responses/category-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CategoryResponseDto {\n  id: string;\n  name: string;\n  parentId: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllCategories\n                            \n                            \n                                    Async\n                                findAllParentCategories\n                            \n                            \n                                    Async\n                                findAllSubcategoriesById\n                            \n                            \n                                    Async\n                                findCategoryTree\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/category/category.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllParentCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllParentCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllSubcategoriesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSubcategoriesById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCategoryTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCategoryTree()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/category/category.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/requests/create-category.dto';\nimport { UpdateCategoryDto } from './dto/requests/update-category.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category } from './schemas/category.schema';\nimport mongoose, { Model } from 'mongoose';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { mapCategoryToResponseDto } from '../../common/mappers/category.mapper';\nimport { CategoryResponseDto } from './dto/responses/category-response.dto';\nimport { CategoryTreeResponseDto } from './dto/responses/category-tree-response.dto';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectModel(Category.name) private readonly categoryModel: Model,\n  ) {}\n\n  async create(\n    createCategoryDto: CreateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ name: createCategoryDto.name })\n      .exec();\n    if (category != null) {\n      throw new RpcException('Category already exists');\n    }\n\n    if (createCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: createCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      const newCategory = await this.categoryModel.create({\n        name: createCategoryDto.name,\n        parentCategory: parentCategory._id,\n      });\n\n      const responseDto = mapCategoryToResponseDto(newCategory);\n\n      return {\n        status: 'success',\n        data: responseDto,\n        message: null,\n      };\n    }\n\n    const newCategory = await this.categoryModel.create({\n      name: createCategoryDto.name,\n      parentCategory: null,\n    });\n\n    const responseDto = mapCategoryToResponseDto(newCategory);\n\n    return {\n      status: 'success',\n      message: 'Category created successfully',\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateCategoryDto: UpdateCategoryDto,\n  ): Promise> {\n    const category = await this.categoryModel\n      .findOne({ _id: updateCategoryDto.id })\n      .exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    if (updateCategoryDto.name != null) {\n      const categoryWithSameName = await this.categoryModel\n        .findOne({ name: updateCategoryDto.name })\n        .exec();\n      if (categoryWithSameName != null) {\n        throw new RpcException('Category with same name already exists');\n      }\n      category.name = updateCategoryDto.name;\n    }\n\n    if (updateCategoryDto.parentId != null) {\n      const parentCategory = await this.categoryModel\n        .findOne({ _id: updateCategoryDto.parentId })\n        .exec();\n      if (parentCategory == null) {\n        throw new RpcException('Parent category does not exist');\n      }\n      category.parentCategory = new mongoose.Types.ObjectId(parentCategory._id);\n    }\n\n    await category.save();\n\n    const responseDto = mapCategoryToResponseDto(category);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async delete(id: string): Promise> {\n    const response = await this.findAllSubcategoriesById(id);\n    if (response.data !== null && response.data.length !== 0) {\n      throw new RpcException('Category has subcategories');\n    }\n    await this.categoryModel.findByIdAndDelete(id).exec();\n    return {\n      status: 'success',\n      message: null,\n      data: id,\n    };\n  }\n\n  async findAllSubcategoriesById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findOne({ _id: id }).exec();\n    if (category == null) {\n      throw new RpcException('Category does not exist');\n    }\n\n    const subcategories = await this.categoryModel\n      .find({ parentCategory: id })\n      .exec();\n\n    const responseDto = subcategories.map((subcategory) =>\n      mapCategoryToResponseDto(subcategory),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllParentCategories(): Promise\n  > {\n    const parentCategories = await this.categoryModel\n      .find({ parentCategory: null })\n      .exec();\n\n    const responseDto = parentCategories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findOneById(\n    id: string,\n  ): Promise> {\n    const category = await this.categoryModel.findById(id).exec();\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n\n    const responseDto = mapCategoryToResponseDto(category);\n\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findAllCategories(): Promise\n  > {\n    const categories = await this.categoryModel.find().exec();\n\n    const responseDto = categories.map((category) =>\n      mapCategoryToResponseDto(category),\n    );\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async findCategoryTree(): Promise\n  > {\n    // fetch all categories\n    const categories = (await this.findAllCategories()).data;\n    if (categories == null || categories.length === 0) {\n      return {\n        status: 'success',\n        message: null,\n        data: [],\n      };\n    }\n\n    const childrenMap = new Map();\n    categories.forEach((category) => {\n      if (category.parentId) {\n        if (!childrenMap.has(category.parentId)) {\n          childrenMap.set(category.parentId, []);\n        }\n        childrenMap.get(category.parentId)!.push(category);\n      }\n    });\n\n    const roots = categories\n      .filter((category) => category.parentId === null)\n      .map((root) => ({\n        id: root.id,\n        name: root.name,\n        children: childrenMap.get(root.id) || [],\n      }));\n\n    return { status: 'success', message: null, data: roots };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryTreeResponseDto.html":{"url":"interfaces/CategoryTreeResponseDto.html","title":"interface - CategoryTreeResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryTreeResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/responses/category-tree-response.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     CategoryResponseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CategoryResponseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CategoryResponseDto } from './category-response.dto';\n\nexport interface CategoryTreeResponseDto {\n  id: string;\n  name: string;\n  children: CategoryResponseDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/create-category.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n  name: string;\n  parentId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProductDto {\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/schemas/product.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category_id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         mongoose.Types.ObjectId | Category | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Category', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/schemas/product.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Category } from '../../category/schemas/category.schema';\n\nexport type ProductDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop({ required: true })\n  name: string;\n  @Prop({ required: true })\n  price: number;\n  @Prop({ required: true })\n  stock: number;\n  @Prop({ required: true })\n  vendor_id: string;\n  @Prop()\n  image: string;\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Category',\n    required: true,\n  })\n  category_id: mongoose.Types.ObjectId | Category | null;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductResponseDto.html":{"url":"classes/ProductResponseDto.html","title":"class - ProductResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/responses/product-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_id\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                stock\n                            \n                            \n                                vendor_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vendor_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/responses/product-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductResponseDto {\n  id: string;\n  name: string;\n  price: number;\n  stock: number;\n  vendor_id: string;\n  category_id: string;\n  image: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByCategory\n                            \n                            \n                                    \n                                findByName\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findStock\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('create-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-all-products')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(category: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-category')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-by-name')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-one-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    findStock(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('find-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('remove-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-product')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern('update-stock')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { EventPattern, Payload } from '@nestjs/microservices';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { AllExceptionsFilter } from '../../common/filters/exception.filter';\n\n@Controller()\n@UseFilters(AllExceptionsFilter)\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @EventPattern('create-product')\n  create(@Payload() createProductDto: CreateProductDto) {\n    return this.productsService.create(createProductDto);\n  }\n\n  @EventPattern('find-all-products')\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n  @EventPattern('find-one-product')\n  findOne(@Payload() id: string) {\n    return this.productsService.findOne(id);\n  }\n\n  @EventPattern('update-product')\n  update(@Payload() updateProductDto: UpdateProductDto) {\n    return this.productsService.update(updateProductDto);\n  }\n\n  @EventPattern('remove-product')\n  remove(@Payload() id: string) {\n    return this.productsService.delete(id);\n  }\n\n  @EventPattern('find-stock')\n  findStock(@Payload() id: string) {\n    return this.productsService.getStock(id);\n  }\n\n  @EventPattern('update-stock')\n  updateStock(@Payload() id: string, stock: number) {\n    return this.productsService.updateStock(id, stock);\n  }\n\n  @EventPattern('find-by-name')\n  findByName(@Payload() name: string) {\n    return this.productsService.findByName(name);\n  }\n\n  @EventPattern('find-by-category')\n  findByCategory(@Payload() category: string) {\n    return this.productsService.findByCategory(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './schemas/product.schema';\nimport { CategoryModule } from '../category/category.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n    CategoryModule,\n  ],\n  controllers: [ProductsController],\n  providers: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                escapeRegex\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCategory\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getStock\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        escapeRegex\n                        \n                    \n                \n            \n            \n                \nescapeRegex(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCategory(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(partialName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStock(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(id: string, stock: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/requests/create-product.dto';\nimport { UpdateProductDto } from './dto/requests/update-product.dto';\nimport { Product } from './schemas/product.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { CategoryService } from '../category/category.service';\nimport { RpcException } from '@nestjs/microservices';\nimport { ApiResponseInterface } from '../../common/dto/api-response.interface';\nimport { ProductResponseDto } from './dto/responses/product-response.dto';\nimport { mapProductToResponseDto } from '../../common/mappers/product.mapper';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel(Product.name) private readonly productModel: Model,\n  ) {}\n\n  async create(\n    createProductDto: CreateProductDto,\n  ): Promise> {\n    const categoryResponse = await CategoryService.prototype.findOneById(\n      createProductDto.category_id,\n    );\n    if (categoryResponse.status != 'success') {\n      throw new RpcException('Category not found');\n    }\n\n    // TODO:  validate vendor id later\n\n    const newProduct = await this.productModel.create(createProductDto);\n\n    const responseDto = mapProductToResponseDto(newProduct);\n    return {\n      status: 'success',\n      message: null,\n      data: responseDto,\n    };\n  }\n\n  async update(\n    updateProductDto: UpdateProductDto,\n  ): Promise> {\n    const product = await this.productModel\n      .findById(updateProductDto.id)\n      .exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n\n    if (updateProductDto.category_id != null) {\n      const categoryResponse = await CategoryService.prototype.findOneById(\n        updateProductDto.category_id,\n      );\n      if (categoryResponse.status != 'success') {\n        throw new RpcException('Category not found');\n      }\n      product.category_id = new mongoose.Types.ObjectId(\n        updateProductDto.category_id,\n      );\n    }\n\n    if (updateProductDto.name != null) {\n      product.name = updateProductDto.name;\n    }\n\n    if (updateProductDto.price != null) {\n      product.price = updateProductDto.price;\n    }\n\n    if (updateProductDto.vendor_id != null) {\n      product.vendor_id = updateProductDto.vendor_id;\n\n      // TODO:  validate vendor id later\n    }\n\n    if (updateProductDto.stock != null) {\n      product.stock = updateProductDto.stock;\n    }\n\n    if (updateProductDto.image != null) {\n      product.image = updateProductDto.image;\n    }\n\n    await product.save();\n\n    const responseDto = mapProductToResponseDto(product);\n\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findAll(): Promise> {\n    const products = await this.productModel.find().exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findOne(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    const responseDto = mapProductToResponseDto(product);\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  escapeRegex(text: string) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  async findByName(\n    partialName: string,\n  ): Promise> {\n    const escaped = this.escapeRegex(partialName);\n    const regex = new RegExp(escaped, 'i');\n    const products = await this.productModel\n      .find({ name: { $regex: regex } })\n      .exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async findByCategory(\n    id: string,\n  ): Promise> {\n    const category = await CategoryService.prototype.findOneById(id);\n    if (category == null) {\n      throw new RpcException('Category not found');\n    }\n    const products = await this.productModel.find({ category_id: id }).exec();\n    const responseDto = products.map((product) =>\n      mapProductToResponseDto(product),\n    );\n    return {\n      message: null,\n      status: 'success',\n      data: responseDto,\n    };\n  }\n\n  async getStock(id: string): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    return {\n      message: null,\n      status: 'success',\n      data: product.stock,\n    };\n  }\n\n  async updateStock(\n    id: string,\n    stock: number,\n  ): Promise> {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    if (stock > {\n    const product = await this.productModel.findOne({ _id: id }).exec();\n    if (product == null) {\n      throw new RpcException('Product not found');\n    }\n    await this.productModel.findByIdAndDelete(id).exec();\n    return {\n      message: null,\n      status: 'success',\n      data: id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/requests/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCategoryDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/category/dto/requests/update-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/requests/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/requests/update-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/dto/api-response.interface.ts\n            \n            interface\n            ApiResponseInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/common/dto/api-response.interface.ts\n            \n            type alias\n            Status\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/mappers/category.mapper.ts\n            \n            function\n            mapCategoryToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/mappers/product.mapper.ts\n            \n            function\n            mapProductToResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/category/dto/requests/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-response.dto.ts\n            \n            class\n            CategoryResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/dto/responses/category-tree-response.dto.ts\n            \n            interface\n            CategoryTreeResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/category/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/category/schemas/category.schema.ts\n            \n            type alias\n            CategoryDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/products/dto/requests/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/products/dto/responses/product-response.dto.ts\n            \n            class\n            ProductResponseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/products/schemas/product.schema.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/products/schemas/product.schema.ts\n            \n            type alias\n            ProductDocument\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/mongoose : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : ^0.10.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            mongoose : ^8.12.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            mapCategoryToResponseDto   (src/.../category.mapper.ts)\n                        \n                        \n                            mapProductToResponseDto   (src/.../product.mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/mappers/category.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapCategoryToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapCategoryToResponseDto(category: CategoryDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CategoryResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/mappers/product.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapProductToResponseDto\n                        \n                    \n                \n            \n            \n                \nmapProductToResponseDto(product: ProductDocument)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            ProductDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ProductResponseDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCategoryModule\n\nCategoryModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nCategoryModule->ProductsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            ProductDocument   (src/.../product.schema.ts)\n                        \n                        \n                            Status   (src/.../api-response.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/modules/products/schemas/product.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProductDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/common/dto/api-response.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                        \"success\" | \"error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/category/schemas/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/modules/products/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
